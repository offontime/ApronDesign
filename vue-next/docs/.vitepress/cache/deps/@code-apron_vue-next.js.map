{
  "version": 3,
  "sources": ["../../../../node_modules/@code-apron/vue-next/lib/@code-apron/vue-next.mjs"],
  "sourcesContent": ["import { ref as b0, openBlock as v0, createElementBlock as w0, createElementVNode as E0, unref as H0, normalizeStyle as O0 } from \"vue\";\nvar V = {}, V0 = function() {\n  return typeof Promise == \"function\" && Promise.prototype && Promise.prototype.then;\n}, p0 = {}, I = {};\nlet i0;\nconst G0 = [\n  0,\n  // Not used\n  26,\n  44,\n  70,\n  100,\n  134,\n  172,\n  196,\n  242,\n  292,\n  346,\n  404,\n  466,\n  532,\n  581,\n  655,\n  733,\n  815,\n  901,\n  991,\n  1085,\n  1156,\n  1258,\n  1364,\n  1474,\n  1588,\n  1706,\n  1828,\n  1921,\n  2051,\n  2185,\n  2323,\n  2465,\n  2611,\n  2761,\n  2876,\n  3034,\n  3196,\n  3362,\n  3532,\n  3706\n];\nI.getSymbolSize = function(e) {\n  if (!e)\n    throw new Error('\"version\" cannot be null or undefined');\n  if (e < 1 || e > 40)\n    throw new Error('\"version\" should be in range from 1 to 40');\n  return e * 4 + 17;\n};\nI.getSymbolTotalCodewords = function(e) {\n  return G0[e];\n};\nI.getBCHDigit = function(x) {\n  let e = 0;\n  for (; x !== 0; )\n    e++, x >>>= 1;\n  return e;\n};\nI.setToSJISFunction = function(e) {\n  if (typeof e != \"function\")\n    throw new Error('\"toSJISFunc\" is not a valid function.');\n  i0 = e;\n};\nI.isKanjiModeEnabled = function() {\n  return typeof i0 < \"u\";\n};\nI.toSJIS = function(e) {\n  return i0(e);\n};\nvar Y = {};\n(function(x) {\n  x.L = { bit: 1 }, x.M = { bit: 0 }, x.Q = { bit: 3 }, x.H = { bit: 2 };\n  function e(n) {\n    if (typeof n != \"string\")\n      throw new Error(\"Param is not a string\");\n    switch (n.toLowerCase()) {\n      case \"l\":\n      case \"low\":\n        return x.L;\n      case \"m\":\n      case \"medium\":\n        return x.M;\n      case \"q\":\n      case \"quartile\":\n        return x.Q;\n      case \"h\":\n      case \"high\":\n        return x.H;\n      default:\n        throw new Error(\"Unknown EC Level: \" + n);\n    }\n  }\n  x.isValid = function(c) {\n    return c && typeof c.bit < \"u\" && c.bit >= 0 && c.bit < 4;\n  }, x.from = function(c, t) {\n    if (x.isValid(c))\n      return c;\n    try {\n      return e(c);\n    } catch {\n      return t;\n    }\n  };\n})(Y);\nfunction y0() {\n  this.buffer = [], this.length = 0;\n}\ny0.prototype = {\n  get: function(x) {\n    const e = Math.floor(x / 8);\n    return (this.buffer[e] >>> 7 - x % 8 & 1) === 1;\n  },\n  put: function(x, e) {\n    for (let n = 0; n < e; n++)\n      this.putBit((x >>> e - n - 1 & 1) === 1);\n  },\n  getLengthInBits: function() {\n    return this.length;\n  },\n  putBit: function(x) {\n    const e = Math.floor(this.length / 8);\n    this.buffer.length <= e && this.buffer.push(0), x && (this.buffer[e] |= 128 >>> this.length % 8), this.length++;\n  }\n};\nvar $0 = y0;\nfunction G(x) {\n  if (!x || x < 1)\n    throw new Error(\"BitMatrix size must be defined and greater than 0\");\n  this.size = x, this.data = new Uint8Array(x * x), this.reservedBit = new Uint8Array(x * x);\n}\nG.prototype.set = function(x, e, n, c) {\n  const t = x * this.size + e;\n  this.data[t] = n, c && (this.reservedBit[t] = !0);\n};\nG.prototype.get = function(x, e) {\n  return this.data[x * this.size + e];\n};\nG.prototype.xor = function(x, e, n) {\n  this.data[x * this.size + e] ^= n;\n};\nG.prototype.isReserved = function(x, e) {\n  return this.reservedBit[x * this.size + e];\n};\nvar K0 = G, S0 = {};\n(function(x) {\n  const e = I.getSymbolSize;\n  x.getRowColCoords = function(c) {\n    if (c === 1)\n      return [];\n    const t = Math.floor(c / 7) + 2, a = e(c), r = a === 145 ? 26 : Math.ceil((a - 13) / (2 * t - 2)) * 2, f = [a - 7];\n    for (let i = 1; i < t - 1; i++)\n      f[i] = f[i - 1] - r;\n    return f.push(6), f.reverse();\n  }, x.getPositions = function(c) {\n    const t = [], a = x.getRowColCoords(c), r = a.length;\n    for (let f = 0; f < r; f++)\n      for (let i = 0; i < r; i++)\n        f === 0 && i === 0 || // top-left\n        f === 0 && i === r - 1 || // bottom-left\n        f === r - 1 && i === 0 || t.push([a[f], a[i]]);\n    return t;\n  };\n})(S0);\nvar C0 = {};\nconst J0 = I.getSymbolSize, _0 = 7;\nC0.getPositions = function(e) {\n  const n = J0(e);\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [n - _0, 0],\n    // bottom-left\n    [0, n - _0]\n  ];\n};\nvar A0 = {};\n(function(x) {\n  x.Patterns = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7\n  };\n  const e = {\n    N1: 3,\n    N2: 3,\n    N3: 40,\n    N4: 10\n  };\n  x.isValid = function(t) {\n    return t != null && t !== \"\" && !isNaN(t) && t >= 0 && t <= 7;\n  }, x.from = function(t) {\n    return x.isValid(t) ? parseInt(t, 10) : void 0;\n  }, x.getPenaltyN1 = function(t) {\n    const a = t.size;\n    let r = 0, f = 0, i = 0, s = null, u = null;\n    for (let l = 0; l < a; l++) {\n      f = i = 0, s = u = null;\n      for (let d = 0; d < a; d++) {\n        let b = t.get(l, d);\n        b === s ? f++ : (f >= 5 && (r += e.N1 + (f - 5)), s = b, f = 1), b = t.get(d, l), b === u ? i++ : (i >= 5 && (r += e.N1 + (i - 5)), u = b, i = 1);\n      }\n      f >= 5 && (r += e.N1 + (f - 5)), i >= 5 && (r += e.N1 + (i - 5));\n    }\n    return r;\n  }, x.getPenaltyN2 = function(t) {\n    const a = t.size;\n    let r = 0;\n    for (let f = 0; f < a - 1; f++)\n      for (let i = 0; i < a - 1; i++) {\n        const s = t.get(f, i) + t.get(f, i + 1) + t.get(f + 1, i) + t.get(f + 1, i + 1);\n        (s === 4 || s === 0) && r++;\n      }\n    return r * e.N2;\n  }, x.getPenaltyN3 = function(t) {\n    const a = t.size;\n    let r = 0, f = 0, i = 0;\n    for (let s = 0; s < a; s++) {\n      f = i = 0;\n      for (let u = 0; u < a; u++)\n        f = f << 1 & 2047 | t.get(s, u), u >= 10 && (f === 1488 || f === 93) && r++, i = i << 1 & 2047 | t.get(u, s), u >= 10 && (i === 1488 || i === 93) && r++;\n    }\n    return r * e.N3;\n  }, x.getPenaltyN4 = function(t) {\n    let a = 0;\n    const r = t.data.length;\n    for (let i = 0; i < r; i++)\n      a += t.data[i];\n    return Math.abs(Math.ceil(a * 100 / r / 5) - 10) * e.N4;\n  };\n  function n(c, t, a) {\n    switch (c) {\n      case x.Patterns.PATTERN000:\n        return (t + a) % 2 === 0;\n      case x.Patterns.PATTERN001:\n        return t % 2 === 0;\n      case x.Patterns.PATTERN010:\n        return a % 3 === 0;\n      case x.Patterns.PATTERN011:\n        return (t + a) % 3 === 0;\n      case x.Patterns.PATTERN100:\n        return (Math.floor(t / 2) + Math.floor(a / 3)) % 2 === 0;\n      case x.Patterns.PATTERN101:\n        return t * a % 2 + t * a % 3 === 0;\n      case x.Patterns.PATTERN110:\n        return (t * a % 2 + t * a % 3) % 2 === 0;\n      case x.Patterns.PATTERN111:\n        return (t * a % 3 + (t + a) % 2) % 2 === 0;\n      default:\n        throw new Error(\"bad maskPattern:\" + c);\n    }\n  }\n  x.applyMask = function(t, a) {\n    const r = a.size;\n    for (let f = 0; f < r; f++)\n      for (let i = 0; i < r; i++)\n        a.isReserved(i, f) || a.xor(i, f, n(t, i, f));\n  }, x.getBestMask = function(t, a) {\n    const r = Object.keys(x.Patterns).length;\n    let f = 0, i = 1 / 0;\n    for (let s = 0; s < r; s++) {\n      a(s), x.applyMask(s, t);\n      const u = x.getPenaltyN1(t) + x.getPenaltyN2(t) + x.getPenaltyN3(t) + x.getPenaltyN4(t);\n      x.applyMask(s, t), u < i && (i = u, f = s);\n    }\n    return f;\n  };\n})(A0);\nvar X = {};\nconst N = Y, $ = [\n  // L  M  Q  H\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  1,\n  2,\n  2,\n  1,\n  2,\n  2,\n  4,\n  1,\n  2,\n  4,\n  4,\n  2,\n  4,\n  4,\n  4,\n  2,\n  4,\n  6,\n  5,\n  2,\n  4,\n  6,\n  6,\n  2,\n  5,\n  8,\n  8,\n  4,\n  5,\n  8,\n  8,\n  4,\n  5,\n  8,\n  11,\n  4,\n  8,\n  10,\n  11,\n  4,\n  9,\n  12,\n  16,\n  4,\n  9,\n  16,\n  16,\n  6,\n  10,\n  12,\n  18,\n  6,\n  10,\n  17,\n  16,\n  6,\n  11,\n  16,\n  19,\n  6,\n  13,\n  18,\n  21,\n  7,\n  14,\n  21,\n  25,\n  8,\n  16,\n  20,\n  25,\n  8,\n  17,\n  23,\n  25,\n  9,\n  17,\n  23,\n  34,\n  9,\n  18,\n  25,\n  30,\n  10,\n  20,\n  27,\n  32,\n  12,\n  21,\n  29,\n  35,\n  12,\n  23,\n  34,\n  37,\n  12,\n  25,\n  34,\n  40,\n  13,\n  26,\n  35,\n  42,\n  14,\n  28,\n  38,\n  45,\n  15,\n  29,\n  40,\n  48,\n  16,\n  31,\n  43,\n  51,\n  17,\n  33,\n  45,\n  54,\n  18,\n  35,\n  48,\n  57,\n  19,\n  37,\n  51,\n  60,\n  19,\n  38,\n  53,\n  63,\n  20,\n  40,\n  56,\n  66,\n  21,\n  43,\n  59,\n  70,\n  22,\n  45,\n  62,\n  74,\n  24,\n  47,\n  65,\n  77,\n  25,\n  49,\n  68,\n  81\n], K = [\n  // L  M  Q  H\n  7,\n  10,\n  13,\n  17,\n  10,\n  16,\n  22,\n  28,\n  15,\n  26,\n  36,\n  44,\n  20,\n  36,\n  52,\n  64,\n  26,\n  48,\n  72,\n  88,\n  36,\n  64,\n  96,\n  112,\n  40,\n  72,\n  108,\n  130,\n  48,\n  88,\n  132,\n  156,\n  60,\n  110,\n  160,\n  192,\n  72,\n  130,\n  192,\n  224,\n  80,\n  150,\n  224,\n  264,\n  96,\n  176,\n  260,\n  308,\n  104,\n  198,\n  288,\n  352,\n  120,\n  216,\n  320,\n  384,\n  132,\n  240,\n  360,\n  432,\n  144,\n  280,\n  408,\n  480,\n  168,\n  308,\n  448,\n  532,\n  180,\n  338,\n  504,\n  588,\n  196,\n  364,\n  546,\n  650,\n  224,\n  416,\n  600,\n  700,\n  224,\n  442,\n  644,\n  750,\n  252,\n  476,\n  690,\n  816,\n  270,\n  504,\n  750,\n  900,\n  300,\n  560,\n  810,\n  960,\n  312,\n  588,\n  870,\n  1050,\n  336,\n  644,\n  952,\n  1110,\n  360,\n  700,\n  1020,\n  1200,\n  390,\n  728,\n  1050,\n  1260,\n  420,\n  784,\n  1140,\n  1350,\n  450,\n  812,\n  1200,\n  1440,\n  480,\n  868,\n  1290,\n  1530,\n  510,\n  924,\n  1350,\n  1620,\n  540,\n  980,\n  1440,\n  1710,\n  570,\n  1036,\n  1530,\n  1800,\n  570,\n  1064,\n  1590,\n  1890,\n  600,\n  1120,\n  1680,\n  1980,\n  630,\n  1204,\n  1770,\n  2100,\n  660,\n  1260,\n  1860,\n  2220,\n  720,\n  1316,\n  1950,\n  2310,\n  750,\n  1372,\n  2040,\n  2430\n];\nX.getBlocksCount = function(e, n) {\n  switch (n) {\n    case N.L:\n      return $[(e - 1) * 4 + 0];\n    case N.M:\n      return $[(e - 1) * 4 + 1];\n    case N.Q:\n      return $[(e - 1) * 4 + 2];\n    case N.H:\n      return $[(e - 1) * 4 + 3];\n    default:\n      return;\n  }\n};\nX.getTotalCodewordsCount = function(e, n) {\n  switch (n) {\n    case N.L:\n      return K[(e - 1) * 4 + 0];\n    case N.M:\n      return K[(e - 1) * 4 + 1];\n    case N.Q:\n      return K[(e - 1) * 4 + 2];\n    case N.H:\n      return K[(e - 1) * 4 + 3];\n    default:\n      return;\n  }\n};\nvar B0 = {}, j = {};\nconst H = new Uint8Array(512), J = new Uint8Array(256);\n(function() {\n  let e = 1;\n  for (let n = 0; n < 255; n++)\n    H[n] = e, J[e] = n, e <<= 1, e & 256 && (e ^= 285);\n  for (let n = 255; n < 512; n++)\n    H[n] = H[n - 255];\n})();\nj.log = function(e) {\n  if (e < 1)\n    throw new Error(\"log(\" + e + \")\");\n  return J[e];\n};\nj.exp = function(e) {\n  return H[e];\n};\nj.mul = function(e, n) {\n  return e === 0 || n === 0 ? 0 : H[J[e] + J[n]];\n};\n(function(x) {\n  const e = j;\n  x.mul = function(c, t) {\n    const a = new Uint8Array(c.length + t.length - 1);\n    for (let r = 0; r < c.length; r++)\n      for (let f = 0; f < t.length; f++)\n        a[r + f] ^= e.mul(c[r], t[f]);\n    return a;\n  }, x.mod = function(c, t) {\n    let a = new Uint8Array(c);\n    for (; a.length - t.length >= 0; ) {\n      const r = a[0];\n      for (let i = 0; i < t.length; i++)\n        a[i] ^= e.mul(t[i], r);\n      let f = 0;\n      for (; f < a.length && a[f] === 0; )\n        f++;\n      a = a.slice(f);\n    }\n    return a;\n  }, x.generateECPolynomial = function(c) {\n    let t = new Uint8Array([1]);\n    for (let a = 0; a < c; a++)\n      t = x.mul(t, new Uint8Array([1, e.exp(a)]));\n    return t;\n  };\n})(B0);\nconst I0 = B0;\nfunction o0(x) {\n  this.genPoly = void 0, this.degree = x, this.degree && this.initialize(this.degree);\n}\no0.prototype.initialize = function(e) {\n  this.degree = e, this.genPoly = I0.generateECPolynomial(this.degree);\n};\no0.prototype.encode = function(e) {\n  if (!this.genPoly)\n    throw new Error(\"Encoder not initialized\");\n  const n = new Uint8Array(e.length + this.degree);\n  n.set(e);\n  const c = I0.mod(n, this.genPoly), t = this.degree - c.length;\n  if (t > 0) {\n    const a = new Uint8Array(this.degree);\n    return a.set(c, t), a;\n  }\n  return c;\n};\nvar Q0 = o0, M0 = {}, L = {}, s0 = {};\ns0.isValid = function(e) {\n  return !isNaN(e) && e >= 1 && e <= 40;\n};\nvar T = {};\nconst T0 = \"[0-9]+\", Y0 = \"[A-Z $%*+\\\\-./:]+\";\nlet O = \"(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+\";\nO = O.replace(/u/g, \"\\\\u\");\nconst X0 = \"(?:(?![A-Z0-9 $%*+\\\\-./:]|\" + O + `)(?:.|[\\r\n]))+`;\nT.KANJI = new RegExp(O, \"g\");\nT.BYTE_KANJI = new RegExp(\"[^A-Z0-9 $%*+\\\\-./:]+\", \"g\");\nT.BYTE = new RegExp(X0, \"g\");\nT.NUMERIC = new RegExp(T0, \"g\");\nT.ALPHANUMERIC = new RegExp(Y0, \"g\");\nconst j0 = new RegExp(\"^\" + O + \"$\"), Z0 = new RegExp(\"^\" + T0 + \"$\"), q0 = new RegExp(\"^[A-Z0-9 $%*+\\\\-./:]+$\");\nT.testKanji = function(e) {\n  return j0.test(e);\n};\nT.testNumeric = function(e) {\n  return Z0.test(e);\n};\nT.testAlphanumeric = function(e) {\n  return q0.test(e);\n};\n(function(x) {\n  const e = s0, n = T;\n  x.NUMERIC = {\n    id: \"Numeric\",\n    bit: 1,\n    ccBits: [10, 12, 14]\n  }, x.ALPHANUMERIC = {\n    id: \"Alphanumeric\",\n    bit: 2,\n    ccBits: [9, 11, 13]\n  }, x.BYTE = {\n    id: \"Byte\",\n    bit: 4,\n    ccBits: [8, 16, 16]\n  }, x.KANJI = {\n    id: \"Kanji\",\n    bit: 8,\n    ccBits: [8, 10, 12]\n  }, x.MIXED = {\n    bit: -1\n  }, x.getCharCountIndicator = function(a, r) {\n    if (!a.ccBits)\n      throw new Error(\"Invalid mode: \" + a);\n    if (!e.isValid(r))\n      throw new Error(\"Invalid version: \" + r);\n    return r >= 1 && r < 10 ? a.ccBits[0] : r < 27 ? a.ccBits[1] : a.ccBits[2];\n  }, x.getBestModeForData = function(a) {\n    return n.testNumeric(a) ? x.NUMERIC : n.testAlphanumeric(a) ? x.ALPHANUMERIC : n.testKanji(a) ? x.KANJI : x.BYTE;\n  }, x.toString = function(a) {\n    if (a && a.id)\n      return a.id;\n    throw new Error(\"Invalid mode\");\n  }, x.isValid = function(a) {\n    return a && a.bit && a.ccBits;\n  };\n  function c(t) {\n    if (typeof t != \"string\")\n      throw new Error(\"Param is not a string\");\n    switch (t.toLowerCase()) {\n      case \"numeric\":\n        return x.NUMERIC;\n      case \"alphanumeric\":\n        return x.ALPHANUMERIC;\n      case \"kanji\":\n        return x.KANJI;\n      case \"byte\":\n        return x.BYTE;\n      default:\n        throw new Error(\"Unknown mode: \" + t);\n    }\n  }\n  x.from = function(a, r) {\n    if (x.isValid(a))\n      return a;\n    try {\n      return c(a);\n    } catch {\n      return r;\n    }\n  };\n})(L);\n(function(x) {\n  const e = I, n = X, c = Y, t = L, a = s0, r = 7973, f = e.getBCHDigit(r);\n  function i(d, b, _) {\n    for (let h = 1; h <= 40; h++)\n      if (b <= x.getCapacity(h, _, d))\n        return h;\n  }\n  function s(d, b) {\n    return t.getCharCountIndicator(d, b) + 4;\n  }\n  function u(d, b) {\n    let _ = 0;\n    return d.forEach(function(h) {\n      const p = s(h.mode, b);\n      _ += p + h.getBitsLength();\n    }), _;\n  }\n  function l(d, b) {\n    for (let _ = 1; _ <= 40; _++)\n      if (u(d, _) <= x.getCapacity(_, b, t.MIXED))\n        return _;\n  }\n  x.from = function(b, _) {\n    return a.isValid(b) ? parseInt(b, 10) : _;\n  }, x.getCapacity = function(b, _, h) {\n    if (!a.isValid(b))\n      throw new Error(\"Invalid QR Code version\");\n    typeof h > \"u\" && (h = t.BYTE);\n    const p = e.getSymbolTotalCodewords(b), v = n.getTotalCodewordsCount(b, _), w = (p - v) * 8;\n    if (h === t.MIXED)\n      return w;\n    const g = w - s(h, b);\n    switch (h) {\n      case t.NUMERIC:\n        return Math.floor(g / 10 * 3);\n      case t.ALPHANUMERIC:\n        return Math.floor(g / 11 * 2);\n      case t.KANJI:\n        return Math.floor(g / 13);\n      case t.BYTE:\n      default:\n        return Math.floor(g / 8);\n    }\n  }, x.getBestVersionForData = function(b, _) {\n    let h;\n    const p = c.from(_, c.M);\n    if (Array.isArray(b)) {\n      if (b.length > 1)\n        return l(b, p);\n      if (b.length === 0)\n        return 1;\n      h = b[0];\n    } else\n      h = b;\n    return i(h.mode, h.getLength(), p);\n  }, x.getEncodedBits = function(b) {\n    if (!a.isValid(b) || b < 7)\n      throw new Error(\"Invalid QR Code version\");\n    let _ = b << 12;\n    for (; e.getBCHDigit(_) - f >= 0; )\n      _ ^= r << e.getBCHDigit(_) - f;\n    return b << 12 | _;\n  };\n})(M0);\nvar P0 = {};\nconst n0 = I, N0 = 1335, W0 = 21522, h0 = n0.getBCHDigit(N0);\nP0.getEncodedBits = function(e, n) {\n  const c = e.bit << 3 | n;\n  let t = c << 10;\n  for (; n0.getBCHDigit(t) - h0 >= 0; )\n    t ^= N0 << n0.getBCHDigit(t) - h0;\n  return (c << 10 | t) ^ W0;\n};\nvar L0 = {};\nconst x1 = L;\nfunction U(x) {\n  this.mode = x1.NUMERIC, this.data = x.toString();\n}\nU.getBitsLength = function(e) {\n  return 10 * Math.floor(e / 3) + (e % 3 ? e % 3 * 3 + 1 : 0);\n};\nU.prototype.getLength = function() {\n  return this.data.length;\n};\nU.prototype.getBitsLength = function() {\n  return U.getBitsLength(this.data.length);\n};\nU.prototype.write = function(e) {\n  let n, c, t;\n  for (n = 0; n + 3 <= this.data.length; n += 3)\n    c = this.data.substr(n, 3), t = parseInt(c, 10), e.put(t, 10);\n  const a = this.data.length - n;\n  a > 0 && (c = this.data.substr(n), t = parseInt(c, 10), e.put(t, a * 3 + 1));\n};\nvar e1 = U;\nconst t1 = L, W = [\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n  \" \",\n  \"$\",\n  \"%\",\n  \"*\",\n  \"+\",\n  \"-\",\n  \".\",\n  \"/\",\n  \":\"\n];\nfunction R(x) {\n  this.mode = t1.ALPHANUMERIC, this.data = x;\n}\nR.getBitsLength = function(e) {\n  return 11 * Math.floor(e / 2) + 6 * (e % 2);\n};\nR.prototype.getLength = function() {\n  return this.data.length;\n};\nR.prototype.getBitsLength = function() {\n  return R.getBitsLength(this.data.length);\n};\nR.prototype.write = function(e) {\n  let n;\n  for (n = 0; n + 2 <= this.data.length; n += 2) {\n    let c = W.indexOf(this.data[n]) * 45;\n    c += W.indexOf(this.data[n + 1]), e.put(c, 11);\n  }\n  this.data.length % 2 && e.put(W.indexOf(this.data[n]), 6);\n};\nvar c1 = R, n1 = function(e) {\n  for (var n = [], c = e.length, t = 0; t < c; t++) {\n    var a = e.charCodeAt(t);\n    if (a >= 55296 && a <= 56319 && c > t + 1) {\n      var r = e.charCodeAt(t + 1);\n      r >= 56320 && r <= 57343 && (a = (a - 55296) * 1024 + r - 56320 + 65536, t += 1);\n    }\n    if (a < 128) {\n      n.push(a);\n      continue;\n    }\n    if (a < 2048) {\n      n.push(a >> 6 | 192), n.push(a & 63 | 128);\n      continue;\n    }\n    if (a < 55296 || a >= 57344 && a < 65536) {\n      n.push(a >> 12 | 224), n.push(a >> 6 & 63 | 128), n.push(a & 63 | 128);\n      continue;\n    }\n    if (a >= 65536 && a <= 1114111) {\n      n.push(a >> 18 | 240), n.push(a >> 12 & 63 | 128), n.push(a >> 6 & 63 | 128), n.push(a & 63 | 128);\n      continue;\n    }\n    n.push(239, 191, 189);\n  }\n  return new Uint8Array(n).buffer;\n};\nconst a1 = n1, r1 = L;\nfunction F(x) {\n  this.mode = r1.BYTE, typeof x == \"string\" && (x = a1(x)), this.data = new Uint8Array(x);\n}\nF.getBitsLength = function(e) {\n  return e * 8;\n};\nF.prototype.getLength = function() {\n  return this.data.length;\n};\nF.prototype.getBitsLength = function() {\n  return F.getBitsLength(this.data.length);\n};\nF.prototype.write = function(x) {\n  for (let e = 0, n = this.data.length; e < n; e++)\n    x.put(this.data[e], 8);\n};\nvar f1 = F;\nconst i1 = L, o1 = I;\nfunction D(x) {\n  this.mode = i1.KANJI, this.data = x;\n}\nD.getBitsLength = function(e) {\n  return e * 13;\n};\nD.prototype.getLength = function() {\n  return this.data.length;\n};\nD.prototype.getBitsLength = function() {\n  return D.getBitsLength(this.data.length);\n};\nD.prototype.write = function(x) {\n  let e;\n  for (e = 0; e < this.data.length; e++) {\n    let n = o1.toSJIS(this.data[e]);\n    if (n >= 33088 && n <= 40956)\n      n -= 33088;\n    else if (n >= 57408 && n <= 60351)\n      n -= 49472;\n    else\n      throw new Error(\n        \"Invalid SJIS character: \" + this.data[e] + `\nMake sure your charset is UTF-8`\n      );\n    n = (n >>> 8 & 255) * 192 + (n & 255), x.put(n, 13);\n  }\n};\nvar s1 = D, U0 = { exports: {} };\n(function(x) {\n  var e = {\n    single_source_shortest_paths: function(n, c, t) {\n      var a = {}, r = {};\n      r[c] = 0;\n      var f = e.PriorityQueue.make();\n      f.push(c, 0);\n      for (var i, s, u, l, d, b, _, h, p; !f.empty(); ) {\n        i = f.pop(), s = i.value, l = i.cost, d = n[s] || {};\n        for (u in d)\n          d.hasOwnProperty(u) && (b = d[u], _ = l + b, h = r[u], p = typeof r[u] > \"u\", (p || h > _) && (r[u] = _, f.push(u, _), a[u] = s));\n      }\n      if (typeof t < \"u\" && typeof r[t] > \"u\") {\n        var v = [\"Could not find a path from \", c, \" to \", t, \".\"].join(\"\");\n        throw new Error(v);\n      }\n      return a;\n    },\n    extract_shortest_path_from_predecessor_list: function(n, c) {\n      for (var t = [], a = c; a; )\n        t.push(a), n[a], a = n[a];\n      return t.reverse(), t;\n    },\n    find_path: function(n, c, t) {\n      var a = e.single_source_shortest_paths(n, c, t);\n      return e.extract_shortest_path_from_predecessor_list(\n        a,\n        t\n      );\n    },\n    /**\n     * A very naive priority queue implementation.\n     */\n    PriorityQueue: {\n      make: function(n) {\n        var c = e.PriorityQueue, t = {}, a;\n        n = n || {};\n        for (a in c)\n          c.hasOwnProperty(a) && (t[a] = c[a]);\n        return t.queue = [], t.sorter = n.sorter || c.default_sorter, t;\n      },\n      default_sorter: function(n, c) {\n        return n.cost - c.cost;\n      },\n      /**\n       * Add a new item to the queue and ensure the highest priority element\n       * is at the front of the queue.\n       */\n      push: function(n, c) {\n        var t = { value: n, cost: c };\n        this.queue.push(t), this.queue.sort(this.sorter);\n      },\n      /**\n       * Return the highest priority element in the queue.\n       */\n      pop: function() {\n        return this.queue.shift();\n      },\n      empty: function() {\n        return this.queue.length === 0;\n      }\n    }\n  };\n  x.exports = e;\n})(U0);\nvar d1 = U0.exports;\n(function(x) {\n  const e = L, n = e1, c = c1, t = f1, a = s1, r = T, f = I, i = d1;\n  function s(v) {\n    return unescape(encodeURIComponent(v)).length;\n  }\n  function u(v, w, g) {\n    const m = [];\n    let E;\n    for (; (E = v.exec(g)) !== null; )\n      m.push({\n        data: E[0],\n        index: E.index,\n        mode: w,\n        length: E[0].length\n      });\n    return m;\n  }\n  function l(v) {\n    const w = u(r.NUMERIC, e.NUMERIC, v), g = u(r.ALPHANUMERIC, e.ALPHANUMERIC, v);\n    let m, E;\n    return f.isKanjiModeEnabled() ? (m = u(r.BYTE, e.BYTE, v), E = u(r.KANJI, e.KANJI, v)) : (m = u(r.BYTE_KANJI, e.BYTE, v), E = []), w.concat(g, m, E).sort(function(S, C) {\n      return S.index - C.index;\n    }).map(function(S) {\n      return {\n        data: S.data,\n        mode: S.mode,\n        length: S.length\n      };\n    });\n  }\n  function d(v, w) {\n    switch (w) {\n      case e.NUMERIC:\n        return n.getBitsLength(v);\n      case e.ALPHANUMERIC:\n        return c.getBitsLength(v);\n      case e.KANJI:\n        return a.getBitsLength(v);\n      case e.BYTE:\n        return t.getBitsLength(v);\n    }\n  }\n  function b(v) {\n    return v.reduce(function(w, g) {\n      const m = w.length - 1 >= 0 ? w[w.length - 1] : null;\n      return m && m.mode === g.mode ? (w[w.length - 1].data += g.data, w) : (w.push(g), w);\n    }, []);\n  }\n  function _(v) {\n    const w = [];\n    for (let g = 0; g < v.length; g++) {\n      const m = v[g];\n      switch (m.mode) {\n        case e.NUMERIC:\n          w.push([\n            m,\n            { data: m.data, mode: e.ALPHANUMERIC, length: m.length },\n            { data: m.data, mode: e.BYTE, length: m.length }\n          ]);\n          break;\n        case e.ALPHANUMERIC:\n          w.push([\n            m,\n            { data: m.data, mode: e.BYTE, length: m.length }\n          ]);\n          break;\n        case e.KANJI:\n          w.push([\n            m,\n            { data: m.data, mode: e.BYTE, length: s(m.data) }\n          ]);\n          break;\n        case e.BYTE:\n          w.push([\n            { data: m.data, mode: e.BYTE, length: s(m.data) }\n          ]);\n      }\n    }\n    return w;\n  }\n  function h(v, w) {\n    const g = {}, m = { start: {} };\n    let E = [\"start\"];\n    for (let y = 0; y < v.length; y++) {\n      const S = v[y], C = [];\n      for (let B = 0; B < S.length; B++) {\n        const A = S[B], M = \"\" + y + B;\n        C.push(M), g[M] = { node: A, lastCount: 0 }, m[M] = {};\n        for (let q = 0; q < E.length; q++) {\n          const P = E[q];\n          g[P] && g[P].node.mode === A.mode ? (m[P][M] = d(g[P].lastCount + A.length, A.mode) - d(g[P].lastCount, A.mode), g[P].lastCount += A.length) : (g[P] && (g[P].lastCount = A.length), m[P][M] = d(A.length, A.mode) + 4 + e.getCharCountIndicator(A.mode, w));\n        }\n      }\n      E = C;\n    }\n    for (let y = 0; y < E.length; y++)\n      m[E[y]].end = 0;\n    return { map: m, table: g };\n  }\n  function p(v, w) {\n    let g;\n    const m = e.getBestModeForData(v);\n    if (g = e.from(w, m), g !== e.BYTE && g.bit < m.bit)\n      throw new Error('\"' + v + '\" cannot be encoded with mode ' + e.toString(g) + `.\n Suggested mode is: ` + e.toString(m));\n    switch (g === e.KANJI && !f.isKanjiModeEnabled() && (g = e.BYTE), g) {\n      case e.NUMERIC:\n        return new n(v);\n      case e.ALPHANUMERIC:\n        return new c(v);\n      case e.KANJI:\n        return new a(v);\n      case e.BYTE:\n        return new t(v);\n    }\n  }\n  x.fromArray = function(w) {\n    return w.reduce(function(g, m) {\n      return typeof m == \"string\" ? g.push(p(m, null)) : m.data && g.push(p(m.data, m.mode)), g;\n    }, []);\n  }, x.fromString = function(w, g) {\n    const m = l(w, f.isKanjiModeEnabled()), E = _(m), y = h(E, g), S = i.find_path(y.map, \"start\", \"end\"), C = [];\n    for (let B = 1; B < S.length - 1; B++)\n      C.push(y.table[S[B]].node);\n    return x.fromArray(b(C));\n  }, x.rawSplit = function(w) {\n    return x.fromArray(\n      l(w, f.isKanjiModeEnabled())\n    );\n  };\n})(L0);\nconst Z = I, x0 = Y, u1 = $0, l1 = K0, b1 = S0, _1 = C0, a0 = A0, r0 = X, h1 = Q0, Q = M0, g1 = P0, m1 = L, e0 = L0;\nfunction v1(x, e) {\n  const n = x.size, c = _1.getPositions(e);\n  for (let t = 0; t < c.length; t++) {\n    const a = c[t][0], r = c[t][1];\n    for (let f = -1; f <= 7; f++)\n      if (!(a + f <= -1 || n <= a + f))\n        for (let i = -1; i <= 7; i++)\n          r + i <= -1 || n <= r + i || (f >= 0 && f <= 6 && (i === 0 || i === 6) || i >= 0 && i <= 6 && (f === 0 || f === 6) || f >= 2 && f <= 4 && i >= 2 && i <= 4 ? x.set(a + f, r + i, !0, !0) : x.set(a + f, r + i, !1, !0));\n  }\n}\nfunction w1(x) {\n  const e = x.size;\n  for (let n = 8; n < e - 8; n++) {\n    const c = n % 2 === 0;\n    x.set(n, 6, c, !0), x.set(6, n, c, !0);\n  }\n}\nfunction E1(x, e) {\n  const n = b1.getPositions(e);\n  for (let c = 0; c < n.length; c++) {\n    const t = n[c][0], a = n[c][1];\n    for (let r = -2; r <= 2; r++)\n      for (let f = -2; f <= 2; f++)\n        r === -2 || r === 2 || f === -2 || f === 2 || r === 0 && f === 0 ? x.set(t + r, a + f, !0, !0) : x.set(t + r, a + f, !1, !0);\n  }\n}\nfunction p1(x, e) {\n  const n = x.size, c = Q.getEncodedBits(e);\n  let t, a, r;\n  for (let f = 0; f < 18; f++)\n    t = Math.floor(f / 3), a = f % 3 + n - 8 - 3, r = (c >> f & 1) === 1, x.set(t, a, r, !0), x.set(a, t, r, !0);\n}\nfunction t0(x, e, n) {\n  const c = x.size, t = g1.getEncodedBits(e, n);\n  let a, r;\n  for (a = 0; a < 15; a++)\n    r = (t >> a & 1) === 1, a < 6 ? x.set(a, 8, r, !0) : a < 8 ? x.set(a + 1, 8, r, !0) : x.set(c - 15 + a, 8, r, !0), a < 8 ? x.set(8, c - a - 1, r, !0) : a < 9 ? x.set(8, 15 - a - 1 + 1, r, !0) : x.set(8, 15 - a - 1, r, !0);\n  x.set(c - 8, 8, 1, !0);\n}\nfunction y1(x, e) {\n  const n = x.size;\n  let c = -1, t = n - 1, a = 7, r = 0;\n  for (let f = n - 1; f > 0; f -= 2)\n    for (f === 6 && f--; ; ) {\n      for (let i = 0; i < 2; i++)\n        if (!x.isReserved(t, f - i)) {\n          let s = !1;\n          r < e.length && (s = (e[r] >>> a & 1) === 1), x.set(t, f - i, s), a--, a === -1 && (r++, a = 7);\n        }\n      if (t += c, t < 0 || n <= t) {\n        t -= c, c = -c;\n        break;\n      }\n    }\n}\nfunction S1(x, e, n) {\n  const c = new u1();\n  n.forEach(function(i) {\n    c.put(i.mode.bit, 4), c.put(i.getLength(), m1.getCharCountIndicator(i.mode, x)), i.write(c);\n  });\n  const t = Z.getSymbolTotalCodewords(x), a = r0.getTotalCodewordsCount(x, e), r = (t - a) * 8;\n  for (c.getLengthInBits() + 4 <= r && c.put(0, 4); c.getLengthInBits() % 8 !== 0; )\n    c.putBit(0);\n  const f = (r - c.getLengthInBits()) / 8;\n  for (let i = 0; i < f; i++)\n    c.put(i % 2 ? 17 : 236, 8);\n  return C1(c, x, e);\n}\nfunction C1(x, e, n) {\n  const c = Z.getSymbolTotalCodewords(e), t = r0.getTotalCodewordsCount(e, n), a = c - t, r = r0.getBlocksCount(e, n), f = c % r, i = r - f, s = Math.floor(c / r), u = Math.floor(a / r), l = u + 1, d = s - u, b = new h1(d);\n  let _ = 0;\n  const h = new Array(r), p = new Array(r);\n  let v = 0;\n  const w = new Uint8Array(x.buffer);\n  for (let S = 0; S < r; S++) {\n    const C = S < i ? u : l;\n    h[S] = w.slice(_, _ + C), p[S] = b.encode(h[S]), _ += C, v = Math.max(v, C);\n  }\n  const g = new Uint8Array(c);\n  let m = 0, E, y;\n  for (E = 0; E < v; E++)\n    for (y = 0; y < r; y++)\n      E < h[y].length && (g[m++] = h[y][E]);\n  for (E = 0; E < d; E++)\n    for (y = 0; y < r; y++)\n      g[m++] = p[y][E];\n  return g;\n}\nfunction A1(x, e, n, c) {\n  let t;\n  if (Array.isArray(x))\n    t = e0.fromArray(x);\n  else if (typeof x == \"string\") {\n    let s = e;\n    if (!s) {\n      const u = e0.rawSplit(x);\n      s = Q.getBestVersionForData(u, n);\n    }\n    t = e0.fromString(x, s || 40);\n  } else\n    throw new Error(\"Invalid data\");\n  const a = Q.getBestVersionForData(t, n);\n  if (!a)\n    throw new Error(\"The amount of data is too big to be stored in a QR Code\");\n  if (!e)\n    e = a;\n  else if (e < a)\n    throw new Error(\n      `\nThe chosen QR Code version cannot contain this amount of data.\nMinimum version required to store current data is: ` + a + `.\n`\n    );\n  const r = S1(e, n, t), f = Z.getSymbolSize(e), i = new l1(f);\n  return v1(i, e), w1(i), E1(i, e), t0(i, n, 0), e >= 7 && p1(i, e), y1(i, r), isNaN(c) && (c = a0.getBestMask(\n    i,\n    t0.bind(null, i, n)\n  )), a0.applyMask(c, i), t0(i, n, c), {\n    modules: i,\n    version: e,\n    errorCorrectionLevel: n,\n    maskPattern: c,\n    segments: t\n  };\n}\np0.create = function(e, n) {\n  if (typeof e > \"u\" || e === \"\")\n    throw new Error(\"No input text\");\n  let c = x0.M, t, a;\n  return typeof n < \"u\" && (c = x0.from(n.errorCorrectionLevel, x0.M), t = Q.from(n.version), a = a0.from(n.maskPattern), n.toSJISFunc && Z.setToSJISFunction(n.toSJISFunc)), A1(e, t, c, a);\n};\nvar R0 = {}, d0 = {};\n(function(x) {\n  function e(n) {\n    if (typeof n == \"number\" && (n = n.toString()), typeof n != \"string\")\n      throw new Error(\"Color should be defined as hex string\");\n    let c = n.slice().replace(\"#\", \"\").split(\"\");\n    if (c.length < 3 || c.length === 5 || c.length > 8)\n      throw new Error(\"Invalid hex color: \" + n);\n    (c.length === 3 || c.length === 4) && (c = Array.prototype.concat.apply([], c.map(function(a) {\n      return [a, a];\n    }))), c.length === 6 && c.push(\"F\", \"F\");\n    const t = parseInt(c.join(\"\"), 16);\n    return {\n      r: t >> 24 & 255,\n      g: t >> 16 & 255,\n      b: t >> 8 & 255,\n      a: t & 255,\n      hex: \"#\" + c.slice(0, 6).join(\"\")\n    };\n  }\n  x.getOptions = function(c) {\n    c || (c = {}), c.color || (c.color = {});\n    const t = typeof c.margin > \"u\" || c.margin === null || c.margin < 0 ? 4 : c.margin, a = c.width && c.width >= 21 ? c.width : void 0, r = c.scale || 4;\n    return {\n      width: a,\n      scale: a ? 4 : r,\n      margin: t,\n      color: {\n        dark: e(c.color.dark || \"#000000ff\"),\n        light: e(c.color.light || \"#ffffffff\")\n      },\n      type: c.type,\n      rendererOpts: c.rendererOpts || {}\n    };\n  }, x.getScale = function(c, t) {\n    return t.width && t.width >= c + t.margin * 2 ? t.width / (c + t.margin * 2) : t.scale;\n  }, x.getImageWidth = function(c, t) {\n    const a = x.getScale(c, t);\n    return Math.floor((c + t.margin * 2) * a);\n  }, x.qrToImageData = function(c, t, a) {\n    const r = t.modules.size, f = t.modules.data, i = x.getScale(r, a), s = Math.floor((r + a.margin * 2) * i), u = a.margin * i, l = [a.color.light, a.color.dark];\n    for (let d = 0; d < s; d++)\n      for (let b = 0; b < s; b++) {\n        let _ = (d * s + b) * 4, h = a.color.light;\n        if (d >= u && b >= u && d < s - u && b < s - u) {\n          const p = Math.floor((d - u) / i), v = Math.floor((b - u) / i);\n          h = l[f[p * r + v] ? 1 : 0];\n        }\n        c[_++] = h.r, c[_++] = h.g, c[_++] = h.b, c[_] = h.a;\n      }\n  };\n})(d0);\n(function(x) {\n  const e = d0;\n  function n(t, a, r) {\n    t.clearRect(0, 0, a.width, a.height), a.style || (a.style = {}), a.height = r, a.width = r, a.style.height = r + \"px\", a.style.width = r + \"px\";\n  }\n  function c() {\n    try {\n      return document.createElement(\"canvas\");\n    } catch {\n      throw new Error(\"You need to specify a canvas element\");\n    }\n  }\n  x.render = function(a, r, f) {\n    let i = f, s = r;\n    typeof i > \"u\" && (!r || !r.getContext) && (i = r, r = void 0), r || (s = c()), i = e.getOptions(i);\n    const u = e.getImageWidth(a.modules.size, i), l = s.getContext(\"2d\"), d = l.createImageData(u, u);\n    return e.qrToImageData(d.data, a, i), n(l, s, u), l.putImageData(d, 0, 0), s;\n  }, x.renderToDataURL = function(a, r, f) {\n    let i = f;\n    typeof i > \"u\" && (!r || !r.getContext) && (i = r, r = void 0), i || (i = {});\n    const s = x.render(a, r, i), u = i.type || \"image/png\", l = i.rendererOpts || {};\n    return s.toDataURL(u, l.quality);\n  };\n})(R0);\nvar F0 = {};\nconst B1 = d0;\nfunction g0(x, e) {\n  const n = x.a / 255, c = e + '=\"' + x.hex + '\"';\n  return n < 1 ? c + \" \" + e + '-opacity=\"' + n.toFixed(2).slice(1) + '\"' : c;\n}\nfunction c0(x, e, n) {\n  let c = x + e;\n  return typeof n < \"u\" && (c += \" \" + n), c;\n}\nfunction I1(x, e, n) {\n  let c = \"\", t = 0, a = !1, r = 0;\n  for (let f = 0; f < x.length; f++) {\n    const i = Math.floor(f % e), s = Math.floor(f / e);\n    !i && !a && (a = !0), x[f] ? (r++, f > 0 && i > 0 && x[f - 1] || (c += a ? c0(\"M\", i + n, 0.5 + s + n) : c0(\"m\", t, 0), t = 0, a = !1), i + 1 < e && x[f + 1] || (c += c0(\"h\", r), r = 0)) : t++;\n  }\n  return c;\n}\nF0.render = function(e, n, c) {\n  const t = B1.getOptions(n), a = e.modules.size, r = e.modules.data, f = a + t.margin * 2, i = t.color.light.a ? \"<path \" + g0(t.color.light, \"fill\") + ' d=\"M0 0h' + f + \"v\" + f + 'H0z\"/>' : \"\", s = \"<path \" + g0(t.color.dark, \"stroke\") + ' d=\"' + I1(r, a, t.margin) + '\"/>', u = 'viewBox=\"0 0 ' + f + \" \" + f + '\"', d = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + (t.width ? 'width=\"' + t.width + '\" height=\"' + t.width + '\" ' : \"\") + u + ' shape-rendering=\"crispEdges\">' + i + s + `</svg>\n`;\n  return typeof c == \"function\" && c(null, d), d;\n};\nconst M1 = V0, f0 = p0, D0 = R0, T1 = F0;\nfunction u0(x, e, n, c, t) {\n  const a = [].slice.call(arguments, 1), r = a.length, f = typeof a[r - 1] == \"function\";\n  if (!f && !M1())\n    throw new Error(\"Callback required as last argument\");\n  if (f) {\n    if (r < 2)\n      throw new Error(\"Too few arguments provided\");\n    r === 2 ? (t = n, n = e, e = c = void 0) : r === 3 && (e.getContext && typeof t > \"u\" ? (t = c, c = void 0) : (t = c, c = n, n = e, e = void 0));\n  } else {\n    if (r < 1)\n      throw new Error(\"Too few arguments provided\");\n    return r === 1 ? (n = e, e = c = void 0) : r === 2 && !e.getContext && (c = n, n = e, e = void 0), new Promise(function(i, s) {\n      try {\n        const u = f0.create(n, c);\n        i(x(u, e, c));\n      } catch (u) {\n        s(u);\n      }\n    });\n  }\n  try {\n    const i = f0.create(n, c);\n    t(null, x(i, e, c));\n  } catch (i) {\n    t(i);\n  }\n}\nV.create = f0.create;\nV.toCanvas = u0.bind(null, D0.render);\nV.toDataURL = u0.bind(null, D0.renderToDataURL);\nV.toString = u0.bind(null, function(x, e, n) {\n  return T1.render(x, n);\n});\nconst P1 = { class: \"apron-qr-code\" }, N1 = [\"src\"], z0 = /* @__PURE__ */ Object.assign({\n  name: \"ApQrcode\"\n}, {\n  __name: \"qrcode\",\n  props: {\n    text: {\n      type: String,\n      default: \"Apron Design QrCode\"\n    },\n    size: {\n      type: [String, Number],\n      default: \"\"\n    },\n    color: {\n      type: String,\n      default: \"#393939\"\n    },\n    backgroundColor: {\n      type: String,\n      default: \"#FFFFFF\"\n    },\n    margin: Number\n  },\n  emits: {\n    // fail: () => { console.log(fail) }\n  },\n  setup(x, { emit: e }) {\n    const n = x, c = b0(n.text), t = b0(\"\");\n    function a(r) {\n      const f = {\n        errorCorrectionLevel: \"H\",\n        width: n.size,\n        margin: n.margin,\n        color: {\n          light: n.backgroundColor,\n          dark: n.color\n        }\n      };\n      V.toDataURL(r || n.text, f, (i, s) => {\n        i ? alert(i) : t.value = s;\n      });\n    }\n    return a(c.value), (r, f) => (v0(), w0(\"div\", P1, [\n      E0(\"img\", { src: t.value }, null, 8, N1)\n    ]));\n  }\n});\nvar o = {\n  PLUS: \"+\",\n  MINUS: \"-\",\n  BASE: 10,\n  scale: 0,\n  bc_num: function() {\n    this.n_sign = null, this.n_len = null, this.n_scale = null, this.n_value = null, this.toString = function() {\n      var x, e;\n      return e = this.n_value.join(\"\"), x = (this.n_sign == o.PLUS ? \"\" : this.n_sign) + e.substr(0, this.n_len), this.n_scale > 0 && (x += \".\" + e.substr(this.n_len, this.n_scale)), x;\n    }, this.setScale = function(x) {\n      for (; this.n_scale < x; )\n        this.n_value.push(0), this.n_scale++;\n      for (; this.n_scale > x; )\n        this.n_value.pop(), this.n_scale--;\n      return this;\n    };\n  },\n  bc_new_num: function(x, e) {\n    var n;\n    return n = new o.bc_num(), n.n_sign = o.PLUS, n.n_len = x, n.n_scale = e, n.n_value = o.safe_emalloc(1, x + e, 0), o.memset(n.n_value, 0, 0, x + e), n;\n  },\n  safe_emalloc: function(x, e, n) {\n    return Array(x * e + n);\n  },\n  bc_init_num: function() {\n    return new o.bc_new_num(1, 0);\n  },\n  _bc_rm_leading_zeros: function(x) {\n    for (; x.n_value[0] === 0 && x.n_len > 1; )\n      x.n_value.shift(), x.n_len--;\n  },\n  php_str2num: function(x) {\n    var e;\n    return e = x.indexOf(\".\"), e == -1 ? o.bc_str2num(x, 0) : o.bc_str2num(x, x.length - e);\n  },\n  CH_VAL: function(x) {\n    return x - \"0\";\n  },\n  BCD_CHAR: function(x) {\n    return x + \"0\";\n  },\n  isdigit: function(x) {\n    return !isNaN(parseInt(x, 10));\n  },\n  bc_str2num: function(x, e) {\n    var n, c, t, a, r, f, i;\n    for (n = x.split(\"\"), t = 0, a = 0, r = 0, f = !1, (n[t] === \"+\" || n[t] === \"-\") && t++; n[t] === \"0\"; )\n      t++;\n    for (; n[t] % 1 === 0; )\n      t++, a++;\n    for (n[t] === \".\" && t++; n[t] % 1 === 0; )\n      t++, r++;\n    if (n[t] || a + r === 0)\n      return o.bc_init_num();\n    for (r = o.MIN(r, e), a === 0 && (f = !0, a = 1), c = o.bc_new_num(a, r), t = 0, n[t] === \"-\" ? (c.n_sign = o.MINUS, t++) : (c.n_sign = o.PLUS, n[t] === \"+\" && t++); n[t] === \"0\"; )\n      t++;\n    for (i = 0, f && (c.n_value[i++] = 0, a = 0); a > 0; a--)\n      c.n_value[i++] = o.CH_VAL(n[t++]);\n    if (r > 0)\n      for (t++; r > 0; r--)\n        c.n_value[i++] = o.CH_VAL(n[t++]);\n    return c;\n  },\n  cint: function(x) {\n    typeof x > \"u\" && (x = 0);\n    var e = parseInt(x, 10);\n    return isNaN(e) && (e = 0), e;\n  },\n  MIN: function(x, e) {\n    return x > e ? e : x;\n  },\n  MAX: function(x, e) {\n    return x > e ? x : e;\n  },\n  ODD: function(x) {\n    return x & 1;\n  },\n  memset: function(x, e, n, c) {\n    var t;\n    for (t = 0; t < c; t++)\n      x[e + t] = n;\n  },\n  memcpy: function(x, e, n, c, t) {\n    var a;\n    for (a = 0; a < t; a++)\n      x[e + a] = n[c + a];\n    return !0;\n  },\n  bc_is_zero: function(x) {\n    var e, n;\n    for (e = x.n_len + x.n_scale, n = 0; e > 0 && x.n_value[n++] === 0; )\n      e--;\n    return e === 0;\n  },\n  bc_out_of_memory: function() {\n    throw new Error(\"(BC) Out of memory\");\n  }\n};\no.bc_add = function(x, e, n) {\n  var c, t, a;\n  if (x.n_sign === e.n_sign)\n    c = o._bc_do_add(x, e, n), c.n_sign = x.n_sign;\n  else\n    switch (t = o._bc_do_compare(x, e, !1, !1), t) {\n      case -1:\n        c = o._bc_do_sub(e, x, n), c.n_sign = e.n_sign;\n        break;\n      case 0:\n        a = o.MAX(n, o.MAX(x.n_scale, e.n_scale)), c = o.bc_new_num(1, a), o.memset(c.n_value, 0, 0, a + 1);\n        break;\n      case 1:\n        c = o._bc_do_sub(x, e, n), c.n_sign = x.n_sign;\n    }\n  return c;\n};\no.bc_compare = function(x, e) {\n  return o._bc_do_compare(x, e, !0, !1);\n};\no._bc_do_compare = function(x, e, n, c) {\n  var t, a, r;\n  if (n && x.n_sign != e.n_sign)\n    return x.n_sign == o.PLUS ? 1 : -1;\n  if (x.n_len != e.n_len)\n    return x.n_len > e.n_len ? !n || x.n_sign == o.PLUS ? 1 : -1 : !n || x.n_sign == o.PLUS ? -1 : 1;\n  for (r = x.n_len + Math.min(x.n_scale, e.n_scale), t = 0, a = 0; r > 0 && x.n_value[t] == e.n_value[a]; )\n    t++, a++, r--;\n  if (c && r == 1 && x.n_scale == e.n_scale)\n    return 0;\n  if (r !== 0)\n    return x.n_value[t] > e.n_value[a] ? !n || x.n_sign == o.PLUS ? 1 : -1 : !n || x.n_sign == o.PLUS ? -1 : 1;\n  if (x.n_scale != e.n_scale) {\n    if (x.n_scale > e.n_scale) {\n      for (r = x.n_scale - e.n_scale; r > 0; r--)\n        if (x.n_value[t++] !== 0)\n          return !n || x.n_sign == o.PLUS ? 1 : -1;\n    } else\n      for (r = e.n_scale - x.n_scale; r > 0; r--)\n        if (e.n_value[a++] !== 0)\n          return !n || x.n_sign == o.PLUS ? -1 : 1;\n  }\n  return 0;\n};\no._one_mult = function(x, e, n, c, t, a) {\n  var r, f, i, s;\n  if (c === 0)\n    o.memset(t, 0, 0, n);\n  else if (c == 1)\n    o.memcpy(t, a, x, e, n);\n  else {\n    for (i = e + n - 1, s = a + n - 1, r = 0; n-- > 0; )\n      f = x[i--] * c + r, t[s--] = f % o.BASE, r = Math.floor(f / o.BASE);\n    r != 0 && (t[s] = r);\n  }\n};\no.bc_divide = function(x, e, n) {\n  var c, t, a, r, f, i, s, u, l, d, b, _, h, p, v, w, g, m, E, y, S, C;\n  if (o.bc_is_zero(e))\n    return -1;\n  if (o.bc_is_zero(x))\n    return o.bc_new_num(1, n);\n  for (e.n_scale === 0 && e.n_len === 1 && e.n_value[0] === 1 && (c = o.bc_new_num(x.n_len, n), c.n_sign = x.n_sign == e.n_sign ? o.PLUS : o.MINUS, o.memset(c.n_value, x.n_len, 0, n), o.memcpy(\n    c.n_value,\n    0,\n    x.n_value,\n    0,\n    x.n_len + o.MIN(x.n_scale, n)\n  )), _ = e.n_scale, i = e.n_len + _ - 1; _ > 0 && e.n_value[i--] === 0; )\n    _--;\n  for (d = x.n_len + _, u = x.n_scale - _, u < n ? p = n - u : p = 0, t = o.safe_emalloc(1, x.n_len + x.n_scale, p + 2), t === null && o.bc_out_of_memory(), o.memset(t, 0, 0, x.n_len + x.n_scale + p + 2), o.memcpy(t, 1, x.n_value, 0, x.n_len + x.n_scale), b = e.n_len + _, a = o.safe_emalloc(1, b, 1), a === null && o.bc_out_of_memory(), o.memcpy(a, 0, e.n_value, 0, b), a[b] = 0, i = 0; a[i] === 0; )\n    i++, b--;\n  if (b > d + n ? (h = n + 1, S = !0) : (S = !1, b > d ? h = n + 1 : h = d - b + n + 1), c = o.bc_new_num(h - n, n), o.memset(c.n_value, 0, 0, h), y = o.safe_emalloc(1, b, 1), y === null && o.bc_out_of_memory(), !S)\n    for (C = Math.floor(10 / (e.n_value[i] + 1)), C != 1 && (o._one_mult(t, 0, d + u + p + 1, C, t, 0), o._one_mult(e.n_value, i, b, C, e.n_value, i)), w = 0, b > d ? s = b - d : s = 0; w <= d + n - b; ) {\n      if (e.n_value[i] == t[w] ? g = 9 : g = Math.floor((t[w] * 10 + t[w + 1]) / e.n_value[i]), e.n_value[i + 1] * g > (t[w] * 10 + t[w + 1] - e.n_value[i] * g) * 10 + t[w + 2] && (g--, e.n_value[i + 1] * g > (t[w] * 10 + t[w + 1] - e.n_value[i] * g) * 10 + t[w + 2] && g--), m = 0, g !== 0)\n        for (y[0] = 0, o._one_mult(e.n_value, i, b, g, y, 1), r = w + b, f = b, v = 0; v < b + 1; v++)\n          f < 0 ? l = t[r] - 0 - m : l = t[r] - y[f--] - m, l < 0 ? (l += 10, m = 1) : m = 0, t[r--] = l;\n      if (m == 1) {\n        for (g--, r = w + b, f = b - 1, E = 0, v = 0; v < b; v++)\n          f < 0 ? l = t[r] + 0 + E : l = t[r] + e.n_value[f--] + E, l > 9 ? (l -= 10, E = 1) : E = 0, t[r--] = l;\n        E == 1 && (t[r] = (t[r] + 1) % 10);\n      }\n      c.n_value[s++] = g, w++;\n    }\n  return c.n_sign = x.n_sign == e.n_sign ? o.PLUS : o.MINUS, o.bc_is_zero(c) && (c.n_sign = o.PLUS), o._bc_rm_leading_zeros(c), c;\n};\no._bc_do_add = function(x, e, n) {\n  var c, t, a, r, f, i, s, u, l, d;\n  if (t = o.MAX(x.n_scale, e.n_scale), a = o.MAX(x.n_len, e.n_len) + 1, c = o.bc_new_num(a, o.MAX(t, n)), u = x.n_scale, l = e.n_scale, r = x.n_len + u - 1, f = e.n_len + l - 1, i = t + a - 1, u != l)\n    if (u > l)\n      for (; u > l; )\n        c.n_value[i--] = x.n_value[r--], u--;\n    else\n      for (; l > u; )\n        c.n_value[i--] = e.n_value[f--], l--;\n  for (u += x.n_len, l += e.n_len, s = 0; u > 0 && l > 0; )\n    d = x.n_value[r--] + e.n_value[f--] + s, d >= o.BASE ? (s = 1, d -= o.BASE) : s = 0, c.n_value[i] = d, i--, u--, l--;\n  if (u === 0)\n    for (; l-- > 0; )\n      d = e.n_value[f--] + s, d >= o.BASE ? (s = 1, d -= o.BASE) : s = 0, c.n_value[i--] = d;\n  else\n    for (; u-- > 0; )\n      d = x.n_value[r--] + s, d >= o.BASE ? (s = 1, d -= o.BASE) : s = 0, c.n_value[i--] = d;\n  return s == 1 && (c.n_value[i] += 1), o._bc_rm_leading_zeros(c), c;\n};\no._bc_do_sub = function(x, e, n) {\n  var c, t, a, r, f, i, s, u, l, d, b;\n  if (a = o.MAX(x.n_len, e.n_len), t = o.MAX(x.n_scale, e.n_scale), f = o.MIN(x.n_len, e.n_len), r = o.MIN(x.n_scale, e.n_scale), c = o.bc_new_num(a, o.MAX(t, n)), i = x.n_len + x.n_scale - 1, s = e.n_len + e.n_scale - 1, u = a + t - 1, l = 0, x.n_scale != r)\n    for (d = x.n_scale - r; d > 0; d--)\n      c.n_value[u--] = x.n_value[i--];\n  else\n    for (d = e.n_scale - r; d > 0; d--)\n      b = 0 - e.n_value[s--] - l, b < 0 ? (b += o.BASE, l = 1) : (l = 0, c.n_value[u--] = b);\n  for (d = 0; d < f + r; d++)\n    b = x.n_value[i--] - e.n_value[s--] - l, b < 0 ? (b += o.BASE, l = 1) : l = 0, c.n_value[u--] = b;\n  if (a != f)\n    for (d = a - f; d > 0; d--)\n      b = x.n_value[i--] - l, b < 0 ? (b += o.BASE, l = 1) : l = 0, c.n_value[u--] = b;\n  return o._bc_rm_leading_zeros(c), c;\n};\no.MUL_BASE_DIGITS = 80;\no.MUL_SMALL_DIGITS = o.MUL_BASE_DIGITS / 4;\no.bc_multiply = function(x, e, n) {\n  var c, t, a, r, f;\n  return t = x.n_len + x.n_scale, a = e.n_len + e.n_scale, r = x.n_scale + e.n_scale, f = o.MIN(r, o.MAX(n, o.MAX(x.n_scale, e.n_scale))), c = o._bc_rec_mul(x, t, e, a, r), c.n_sign = x.n_sign == e.n_sign ? o.PLUS : o.MINUS, c.n_len = a + t + 1 - r, c.n_scale = f, o._bc_rm_leading_zeros(c), o.bc_is_zero(c) && (c.n_sign = o.PLUS), c;\n};\no.new_sub_num = function(x, e, n) {\n  var c = new o.bc_num();\n  return c.n_sign = o.PLUS, c.n_len = x, c.n_scale = e, c.n_value = n, c;\n};\no._bc_simp_mul = function(x, e, n, c, t) {\n  var a, r, f, i, s, u, l, d, b;\n  for (b = e + c + 1, a = o.bc_new_num(b, 0), s = e - 1, u = c - 1, i = b - 1, d = 0, l = 0; l < b - 1; l++) {\n    for (r = s - o.MAX(0, l - c + 1), f = u - o.MIN(l, c - 1); r >= 0 && f <= u; )\n      d += x.n_value[r--] * n.n_value[f++];\n    a.n_value[i--] = Math.floor(d % o.BASE), d = Math.floor(d / o.BASE);\n  }\n  return a.n_value[i] = d, a;\n};\no._bc_shift_addsub = function(x, e, n, c) {\n  var t, a, r, f;\n  if (r = e.n_len, e.n_value[0] === 0 && r--, !(x.n_len + x.n_scale >= n + r))\n    throw new Error(\"len + scale < shift + count\");\n  if (t = x.n_len + x.n_scale - n - 1, a = e.n_len = 1, f = 0, c) {\n    for (; r--; )\n      x.n_value[t] -= e.n_value[a--] + f, x.n_value[t] < 0 ? (f = 1, x.n_value[t--] += o.BASE) : (f = 0, t--);\n    for (; f; )\n      x.n_value[t] -= f, x.n_value[t] < 0 ? x.n_value[t--] += o.BASE : f = 0;\n  } else {\n    for (; r--; )\n      x.n_value[t] += e.n_value[a--] + f, x.n_value[t] > o.BASE - 1 ? (f = 1, x.n_value[t--] -= o.BASE) : (f = 0, t--);\n    for (; f; )\n      x.n_value[t] += f, x.n_value[t] > o.BASE - 1 ? x.n_value[t--] -= o.BASE : f = 0;\n  }\n  return !0;\n};\no._bc_rec_mul = function(x, e, n, c, t) {\n  var a, r, f, i, s, u, l, d, b, _, h, p, v, w, g;\n  return e + c < o.MUL_BASE_DIGITS || e < o.MUL_SMALL_DIGITS || c < o.MUL_SMALL_DIGITS ? o._bc_simp_mul(x, e, n, c, t) : (h = Math.floor((o.MAX(e, c) + 1) / 2), e < h ? (f = o.bc_init_num(), r = o.new_sub_num(e, 0, x.n_value)) : (f = o.new_sub_num(e - h, 0, x.n_value), r = o.new_sub_num(h, 0, x.n_value + e - h)), c < h ? (s = o.bc_init_num(), i = o.new_sub_num(c, 0, n.n_value)) : (s = o.new_sub_num(c - h, 0, n.n_value), i = o.new_sub_num(h, 0, n.n_value + c - h)), o._bc_rm_leading_zeros(f), o._bc_rm_leading_zeros(r), r.n_len, o._bc_rm_leading_zeros(s), o._bc_rm_leading_zeros(i), i.n_len, v = o.bc_is_zero(f) || o.bc_is_zero(s), b = o.bc_init_num(), _ = o.bc_init_num(), b = o.bc_sub(f, r, 0), w = b.n_len, _ = o.bc_sub(i, s, 0), g = _.n_len, v ? u = o.bc_init_num() : u = o._bc_rec_mul(f, f.n_len, s, s.n_len, 0), o.bc_is_zero(b) || o.bc_is_zero(_) ? l = o.bc_init_num() : l = o._bc_rec_mul(b, w, _, g, 0), o.bc_is_zero(r) || o.bc_is_zero(i) ? d = o.bc_init_num() : d = o._bc_rec_mul(r, r.n_len, i, i.n_len, 0), p = e + c + 1, a = o.bc_new_num(p, 0), v || (o._bc_shift_addsub(a, u, 2 * h, 0), o._bc_shift_addsub(a, u, h, 0)), o._bc_shift_addsub(a, d, h, 0), o._bc_shift_addsub(a, d, 0, 0), o._bc_shift_addsub(a, l, h, b.n_sign != _.n_sign), a);\n};\no.bc_sub = function(x, e, n) {\n  var c, t, a;\n  if (x.n_sign != e.n_sign)\n    c = o._bc_do_add(x, e, n), c.n_sign = x.n_sign;\n  else\n    switch (t = o._bc_do_compare(x, e, !1, !1), t) {\n      case -1:\n        c = o._bc_do_sub(e, x, n), c.n_sign = e.n_sign == o.PLUS ? o.MINUS : o.PLUS;\n        break;\n      case 0:\n        a = o.MAX(n, o.MAX(x.n_scale, e.n_scale)), c = o.bc_new_num(1, a), o.memset(c.n_value, 0, 0, a + 1);\n        break;\n      case 1:\n        c = o._bc_do_sub(x, e, n), c.n_sign = x.n_sign;\n        break;\n    }\n  return c;\n};\nfunction z(x, e, n) {\n  var c, t, a;\n  return typeof n > \"u\" && (n = o.scale), n = n < 0 ? 0 : n, c = o.bc_init_num(), t = o.bc_init_num(), a = o.bc_init_num(), c = o.php_str2num(x.toString()), t = o.php_str2num(e.toString()), c.n_scale > t.n_scale && t.setScale(c.n_scale), t.n_scale > c.n_scale && c.setScale(t.n_scale), a = o.bc_add(c, t, n), a.n_scale > n && (a.n_scale = n), a.toString();\n}\nfunction m0(x, e, n) {\n  var c, t, a;\n  if (typeof n > \"u\" && (n = o.scale), n = n < 0 ? 0 : n, c = o.bc_init_num(), t = o.bc_init_num(), a = o.bc_init_num(), c = o.php_str2num(x.toString()), t = o.php_str2num(e.toString()), c.n_scale > t.n_scale && t.setScale(c.n_scale), t.n_scale > c.n_scale && c.setScale(t.n_scale), a = o.bc_divide(c, t, n), a === -1)\n    throw new Error(11, \"(BC) Division by zero\");\n  return a.n_scale > n && (a.n_scale = n), a.toString();\n}\nfunction k(x, e, n) {\n  var c, t, a;\n  return typeof n > \"u\" && (n = o.scale), n = n < 0 ? 0 : n, c = o.bc_init_num(), t = o.bc_init_num(), a = o.bc_init_num(), c = o.php_str2num(x.toString()), t = o.php_str2num(e.toString()), c.n_scale > t.n_scale && t.setScale(c.n_scale), t.n_scale > c.n_scale && c.setScale(t.n_scale), a = o.bc_multiply(c, t, n), a.n_scale > n && (a.n_scale = n), a.toString();\n}\nfunction L1() {\n  return {\n    ROWHEIGHT: 4,\n    QUIETH: 2,\n    QUIETV: 2,\n    barcode_array: {},\n    start_pattern: \"11111111010101000\",\n    stop_pattern: \"111111101000101001\",\n    /**\n    * Array of text Compaction Sub-Modes (values 0xFB - 0xFF are used for submode changers).\n    */\n    textsubmodes: [\n      [\n        65,\n        66,\n        67,\n        68,\n        69,\n        70,\n        71,\n        72,\n        73,\n        74,\n        75,\n        76,\n        77,\n        78,\n        79,\n        80,\n        81,\n        82,\n        83,\n        84,\n        85,\n        86,\n        87,\n        88,\n        89,\n        90,\n        32,\n        253,\n        254,\n        255\n      ],\n      // Alpha\n      [\n        97,\n        98,\n        99,\n        100,\n        101,\n        102,\n        103,\n        104,\n        105,\n        106,\n        107,\n        108,\n        109,\n        110,\n        111,\n        112,\n        113,\n        114,\n        115,\n        116,\n        117,\n        118,\n        119,\n        120,\n        121,\n        122,\n        32,\n        253,\n        254,\n        255\n      ],\n      // Lower\n      [\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57,\n        38,\n        13,\n        9,\n        44,\n        58,\n        35,\n        45,\n        46,\n        36,\n        47,\n        43,\n        37,\n        42,\n        61,\n        94,\n        251,\n        32,\n        253,\n        254,\n        255\n      ],\n      // Mixed\n      [\n        59,\n        60,\n        62,\n        64,\n        91,\n        92,\n        93,\n        95,\n        96,\n        126,\n        33,\n        13,\n        9,\n        44,\n        58,\n        10,\n        45,\n        46,\n        36,\n        47,\n        34,\n        124,\n        42,\n        40,\n        41,\n        63,\n        123,\n        125,\n        39,\n        255\n      ]\n      // Puntuaction\n    ],\n    /**\n    * Array of switching codes for Text Compaction Sub-Modes.\n    */\n    textlatch: {\n      \"01\": [27],\n      \"02\": [28],\n      \"03\": [28, 25],\n      //\n      10: [28, 28],\n      12: [28],\n      13: [28, 25],\n      //\n      20: [28],\n      21: [27],\n      23: [25],\n      //\n      30: [29],\n      31: [29, 27],\n      32: [29, 28]\n      //\n    },\n    /**\n    * Clusters of codewords (0, 3, 6)<br/>\n    * Values are hex equivalents of binary representation of bars (1 = bar, 0 = space).<br/>\n    * The codewords numbered from 900 to 928 have special meaning, some enable to switch between modes in order to optimise the code:\n    * <ul>\n    * <li>900 : Switch to \"Text\" mode</li>\n    * <li>901 : Switch to \"Byte\" mode</li>\n    * <li>902 : Switch to \"Numeric\" mode</li>\n    * <li>903 - 912 : Reserved</li>\n    * <li>913 : Switch to \"Octet\" only for the next codeword</li>\n    * <li>914 - 920 : Reserved</li>\n    * <li>921 : Initialization</li>\n    * <li>922 : Terminator codeword for Macro PDF control block</li>\n    * <li>923 : Sequence tag to identify the beginning of optional fields in the Macro PDF control block</li>\n    * <li>924 : Switch to \"Byte\" mode (If the total number of byte is multiple of 6)</li>\n    * <li>925 : Identifier for a user defined Extended Channel Interpretation (ECI)</li>\n    * <li>926 : Identifier for a general purpose ECI format</li>\n    * <li>927 : Identifier for an ECI of a character set or code page</li>\n    * <li>928 : Macro marker codeword to indicate the beginning of a Macro PDF Control Block</li>\n    * </ul>\n    */\n    clusters: [\n      [\n        // cluster 0 -----------------------------------------------------------------------\n        120256,\n        125680,\n        128380,\n        120032,\n        125560,\n        128318,\n        108736,\n        119920,\n        108640,\n        86080,\n        //  10\n        108592,\n        86048,\n        110016,\n        120560,\n        125820,\n        109792,\n        120440,\n        125758,\n        88256,\n        109680,\n        //  20\n        88160,\n        89536,\n        110320,\n        120700,\n        89312,\n        110200,\n        120638,\n        89200,\n        110140,\n        89840,\n        //  30\n        110460,\n        89720,\n        110398,\n        89980,\n        128506,\n        119520,\n        125304,\n        128190,\n        107712,\n        119408,\n        //  40\n        125244,\n        107616,\n        119352,\n        84032,\n        107568,\n        119324,\n        84e3,\n        107544,\n        83984,\n        108256,\n        //  50\n        119672,\n        125374,\n        85184,\n        108144,\n        119612,\n        85088,\n        108088,\n        119582,\n        85040,\n        108060,\n        //  60\n        85728,\n        108408,\n        119742,\n        85616,\n        108348,\n        85560,\n        108318,\n        85880,\n        108478,\n        85820,\n        //  70\n        85790,\n        107200,\n        119152,\n        125116,\n        107104,\n        119096,\n        125086,\n        83008,\n        107056,\n        119068,\n        //  80\n        82976,\n        107032,\n        82960,\n        82952,\n        83648,\n        107376,\n        119228,\n        83552,\n        107320,\n        119198,\n        //  90\n        83504,\n        107292,\n        83480,\n        83468,\n        83824,\n        107452,\n        83768,\n        107422,\n        83740,\n        83900,\n        // 100\n        106848,\n        118968,\n        125022,\n        82496,\n        106800,\n        118940,\n        82464,\n        106776,\n        118926,\n        82448,\n        // 110\n        106764,\n        82440,\n        106758,\n        82784,\n        106936,\n        119006,\n        82736,\n        106908,\n        82712,\n        106894,\n        // 120\n        82700,\n        82694,\n        106974,\n        82830,\n        82240,\n        106672,\n        118876,\n        82208,\n        106648,\n        118862,\n        // 130\n        82192,\n        106636,\n        82184,\n        106630,\n        82180,\n        82352,\n        82328,\n        82316,\n        82080,\n        118830,\n        // 140\n        106572,\n        106566,\n        82050,\n        117472,\n        124280,\n        127678,\n        103616,\n        117360,\n        124220,\n        103520,\n        // 150\n        117304,\n        124190,\n        75840,\n        103472,\n        75808,\n        104160,\n        117624,\n        124350,\n        76992,\n        104048,\n        // 160\n        117564,\n        76896,\n        103992,\n        76848,\n        76824,\n        77536,\n        104312,\n        117694,\n        77424,\n        104252,\n        // 170\n        77368,\n        77340,\n        77688,\n        104382,\n        77628,\n        77758,\n        121536,\n        126320,\n        128700,\n        121440,\n        // 180\n        126264,\n        128670,\n        111680,\n        121392,\n        126236,\n        111648,\n        121368,\n        126222,\n        111632,\n        121356,\n        // 190\n        103104,\n        117104,\n        124092,\n        112320,\n        103008,\n        117048,\n        124062,\n        112224,\n        121656,\n        126366,\n        // 200\n        93248,\n        74784,\n        102936,\n        117006,\n        93216,\n        112152,\n        93200,\n        75456,\n        103280,\n        117180,\n        // 210\n        93888,\n        75360,\n        103224,\n        117150,\n        93792,\n        112440,\n        121758,\n        93744,\n        75288,\n        93720,\n        // 220\n        75632,\n        103356,\n        94064,\n        75576,\n        103326,\n        94008,\n        112542,\n        93980,\n        75708,\n        94140,\n        // 230\n        75678,\n        94110,\n        121184,\n        126136,\n        128606,\n        111168,\n        121136,\n        126108,\n        111136,\n        121112,\n        // 240\n        126094,\n        111120,\n        121100,\n        111112,\n        111108,\n        102752,\n        116920,\n        123998,\n        111456,\n        102704,\n        // 250\n        116892,\n        91712,\n        74272,\n        121244,\n        116878,\n        91680,\n        74256,\n        102668,\n        91664,\n        111372,\n        // 260\n        102662,\n        74244,\n        74592,\n        102840,\n        116958,\n        92e3,\n        74544,\n        102812,\n        91952,\n        111516,\n        // 270\n        102798,\n        91928,\n        74508,\n        74502,\n        74680,\n        102878,\n        92088,\n        74652,\n        92060,\n        74638,\n        // 280\n        92046,\n        92126,\n        110912,\n        121008,\n        126044,\n        110880,\n        120984,\n        126030,\n        110864,\n        120972,\n        // 290\n        110856,\n        120966,\n        110852,\n        110850,\n        74048,\n        102576,\n        116828,\n        90944,\n        74016,\n        102552,\n        // 300\n        116814,\n        90912,\n        111e3,\n        121038,\n        90896,\n        73992,\n        102534,\n        90888,\n        110982,\n        90884,\n        // 310\n        74160,\n        102620,\n        91056,\n        74136,\n        102606,\n        91032,\n        111054,\n        91020,\n        74118,\n        91014,\n        // 320\n        91100,\n        91086,\n        110752,\n        120920,\n        125998,\n        110736,\n        120908,\n        110728,\n        120902,\n        110724,\n        // 330\n        110722,\n        73888,\n        102488,\n        116782,\n        90528,\n        73872,\n        102476,\n        90512,\n        110796,\n        102470,\n        // 340\n        90504,\n        73860,\n        90500,\n        73858,\n        73944,\n        90584,\n        90572,\n        90566,\n        120876,\n        120870,\n        // 350\n        110658,\n        102444,\n        73800,\n        90312,\n        90308,\n        90306,\n        101056,\n        116080,\n        123580,\n        100960,\n        // 360\n        116024,\n        70720,\n        100912,\n        115996,\n        70688,\n        100888,\n        70672,\n        70664,\n        71360,\n        101232,\n        // 370\n        116156,\n        71264,\n        101176,\n        116126,\n        71216,\n        101148,\n        71192,\n        71180,\n        71536,\n        101308,\n        // 380\n        71480,\n        101278,\n        71452,\n        71612,\n        71582,\n        118112,\n        124600,\n        127838,\n        105024,\n        118064,\n        // 390\n        124572,\n        104992,\n        118040,\n        124558,\n        104976,\n        118028,\n        104968,\n        118022,\n        100704,\n        115896,\n        // 400\n        123486,\n        105312,\n        100656,\n        115868,\n        79424,\n        70176,\n        118172,\n        115854,\n        79392,\n        105240,\n        // 410\n        100620,\n        79376,\n        70152,\n        79368,\n        70496,\n        100792,\n        115934,\n        79712,\n        70448,\n        118238,\n        // 420\n        79664,\n        105372,\n        100750,\n        79640,\n        70412,\n        79628,\n        70584,\n        100830,\n        79800,\n        70556,\n        // 430\n        79772,\n        70542,\n        70622,\n        79838,\n        122176,\n        126640,\n        128860,\n        122144,\n        126616,\n        128846,\n        // 440\n        122128,\n        126604,\n        122120,\n        126598,\n        122116,\n        104768,\n        117936,\n        124508,\n        113472,\n        104736,\n        // 450\n        126684,\n        124494,\n        113440,\n        122264,\n        126670,\n        113424,\n        104712,\n        117894,\n        113416,\n        122246,\n        // 460\n        104706,\n        69952,\n        100528,\n        115804,\n        78656,\n        69920,\n        100504,\n        115790,\n        96064,\n        78624,\n        // 470\n        104856,\n        117966,\n        96032,\n        113560,\n        122318,\n        100486,\n        96016,\n        78600,\n        104838,\n        96008,\n        // 480\n        69890,\n        70064,\n        100572,\n        78768,\n        70040,\n        100558,\n        96176,\n        78744,\n        104910,\n        96152,\n        // 490\n        113614,\n        70022,\n        78726,\n        70108,\n        78812,\n        70094,\n        96220,\n        78798,\n        122016,\n        126552,\n        // 500\n        128814,\n        122e3,\n        126540,\n        121992,\n        126534,\n        121988,\n        121986,\n        104608,\n        117848,\n        124462,\n        // 510\n        113056,\n        104592,\n        126574,\n        113040,\n        122060,\n        117830,\n        113032,\n        104580,\n        113028,\n        104578,\n        // 520\n        113026,\n        69792,\n        100440,\n        115758,\n        78240,\n        69776,\n        100428,\n        95136,\n        78224,\n        104652,\n        // 530\n        100422,\n        95120,\n        113100,\n        69764,\n        95112,\n        78212,\n        69762,\n        78210,\n        69848,\n        100462,\n        // 540\n        78296,\n        69836,\n        95192,\n        78284,\n        69830,\n        95180,\n        78278,\n        69870,\n        95214,\n        121936,\n        // 550\n        126508,\n        121928,\n        126502,\n        121924,\n        121922,\n        104528,\n        117804,\n        112848,\n        104520,\n        117798,\n        // 560\n        112840,\n        121958,\n        112836,\n        104514,\n        112834,\n        69712,\n        100396,\n        78032,\n        69704,\n        100390,\n        // 570\n        94672,\n        78024,\n        104550,\n        94664,\n        112870,\n        69698,\n        94660,\n        78018,\n        94658,\n        78060,\n        // 580\n        94700,\n        94694,\n        126486,\n        121890,\n        117782,\n        104484,\n        104482,\n        69672,\n        77928,\n        94440,\n        // 590\n        69666,\n        77922,\n        99680,\n        68160,\n        99632,\n        68128,\n        99608,\n        115342,\n        68112,\n        99596,\n        // 600\n        68104,\n        99590,\n        68448,\n        99768,\n        115422,\n        68400,\n        99740,\n        68376,\n        99726,\n        68364,\n        // 610\n        68358,\n        68536,\n        99806,\n        68508,\n        68494,\n        68574,\n        101696,\n        116400,\n        123740,\n        101664,\n        // 620\n        116376,\n        101648,\n        116364,\n        101640,\n        116358,\n        101636,\n        67904,\n        99504,\n        115292,\n        72512,\n        // 630\n        67872,\n        116444,\n        115278,\n        72480,\n        101784,\n        116430,\n        72464,\n        67848,\n        99462,\n        72456,\n        // 640\n        101766,\n        67842,\n        68016,\n        99548,\n        72624,\n        67992,\n        99534,\n        72600,\n        101838,\n        72588,\n        // 650\n        67974,\n        68060,\n        72668,\n        68046,\n        72654,\n        118432,\n        124760,\n        127918,\n        118416,\n        124748,\n        // 660\n        118408,\n        124742,\n        118404,\n        118402,\n        101536,\n        116312,\n        105888,\n        101520,\n        116300,\n        105872,\n        // 670\n        118476,\n        116294,\n        105864,\n        101508,\n        105860,\n        101506,\n        105858,\n        67744,\n        99416,\n        72096,\n        // 680\n        67728,\n        116334,\n        80800,\n        72080,\n        101580,\n        99398,\n        80784,\n        105932,\n        67716,\n        80776,\n        // 690\n        72068,\n        67714,\n        72066,\n        67800,\n        99438,\n        72152,\n        67788,\n        80856,\n        72140,\n        67782,\n        // 700\n        80844,\n        72134,\n        67822,\n        72174,\n        80878,\n        126800,\n        128940,\n        126792,\n        128934,\n        126788,\n        // 710\n        126786,\n        118352,\n        124716,\n        122576,\n        126828,\n        124710,\n        122568,\n        126822,\n        122564,\n        118338,\n        // 720\n        122562,\n        101456,\n        116268,\n        105680,\n        101448,\n        116262,\n        114128,\n        105672,\n        118374,\n        114120,\n        // 730\n        122598,\n        101442,\n        114116,\n        105666,\n        114114,\n        67664,\n        99372,\n        71888,\n        67656,\n        99366,\n        // 740\n        80336,\n        71880,\n        101478,\n        97232,\n        80328,\n        105702,\n        67650,\n        97224,\n        114150,\n        71874,\n        // 750\n        97220,\n        67692,\n        71916,\n        67686,\n        80364,\n        71910,\n        97260,\n        80358,\n        97254,\n        126760,\n        // 760\n        128918,\n        126756,\n        126754,\n        118312,\n        124694,\n        122472,\n        126774,\n        122468,\n        118306,\n        122466,\n        // 770\n        101416,\n        116246,\n        105576,\n        101412,\n        113896,\n        105572,\n        101410,\n        113892,\n        105570,\n        113890,\n        // 780\n        67624,\n        99350,\n        71784,\n        101430,\n        80104,\n        71780,\n        67618,\n        96744,\n        80100,\n        71778,\n        // 790\n        96740,\n        80098,\n        96738,\n        71798,\n        96758,\n        126738,\n        122420,\n        122418,\n        105524,\n        113780,\n        // 800\n        113778,\n        71732,\n        79988,\n        96500,\n        96498,\n        66880,\n        66848,\n        98968,\n        66832,\n        66824,\n        // 810\n        66820,\n        66992,\n        66968,\n        66956,\n        66950,\n        67036,\n        67022,\n        1e5,\n        99984,\n        115532,\n        // 820\n        99976,\n        115526,\n        99972,\n        99970,\n        66720,\n        98904,\n        69024,\n        100056,\n        98892,\n        69008,\n        // 830\n        100044,\n        69e3,\n        100038,\n        68996,\n        66690,\n        68994,\n        66776,\n        98926,\n        69080,\n        100078,\n        // 840\n        69068,\n        66758,\n        69062,\n        66798,\n        69102,\n        116560,\n        116552,\n        116548,\n        116546,\n        99920,\n        // 850\n        102096,\n        116588,\n        115494,\n        102088,\n        116582,\n        102084,\n        99906,\n        102082,\n        66640,\n        68816,\n        // 860\n        66632,\n        98854,\n        73168,\n        68808,\n        66628,\n        73160,\n        68804,\n        66626,\n        73156,\n        68802,\n        // 870\n        66668,\n        68844,\n        66662,\n        73196,\n        68838,\n        73190,\n        124840,\n        124836,\n        124834,\n        116520,\n        // 880\n        118632,\n        124854,\n        118628,\n        116514,\n        118626,\n        99880,\n        115478,\n        101992,\n        116534,\n        106216,\n        // 890\n        101988,\n        99874,\n        106212,\n        101986,\n        106210,\n        66600,\n        98838,\n        68712,\n        99894,\n        72936,\n        // 900\n        68708,\n        66594,\n        81384,\n        72932,\n        68706,\n        81380,\n        72930,\n        66614,\n        68726,\n        72950,\n        // 910\n        81398,\n        128980,\n        128978,\n        124820,\n        126900,\n        124818,\n        126898,\n        116500,\n        118580,\n        116498,\n        // 920\n        122740,\n        118578,\n        122738,\n        99860,\n        101940,\n        99858,\n        106100,\n        101938,\n        114420\n      ],\n      // 929\n      [\n        // cluster 3 -----------------------------------------------------------------------\n        128352,\n        129720,\n        125504,\n        128304,\n        129692,\n        125472,\n        128280,\n        129678,\n        125456,\n        128268,\n        //  10\n        125448,\n        128262,\n        125444,\n        125792,\n        128440,\n        129758,\n        120384,\n        125744,\n        128412,\n        120352,\n        //  20\n        125720,\n        128398,\n        120336,\n        125708,\n        120328,\n        125702,\n        120324,\n        120672,\n        125880,\n        128478,\n        //  30\n        110144,\n        120624,\n        125852,\n        110112,\n        120600,\n        125838,\n        110096,\n        120588,\n        110088,\n        120582,\n        //  40\n        110084,\n        110432,\n        120760,\n        125918,\n        89664,\n        110384,\n        120732,\n        89632,\n        110360,\n        120718,\n        //  50\n        89616,\n        110348,\n        89608,\n        110342,\n        89952,\n        110520,\n        120798,\n        89904,\n        110492,\n        89880,\n        //  60\n        110478,\n        89868,\n        90040,\n        110558,\n        90012,\n        89998,\n        125248,\n        128176,\n        129628,\n        125216,\n        //  70\n        128152,\n        129614,\n        125200,\n        128140,\n        125192,\n        128134,\n        125188,\n        125186,\n        119616,\n        125360,\n        //  80\n        128220,\n        119584,\n        125336,\n        128206,\n        119568,\n        125324,\n        119560,\n        125318,\n        119556,\n        119554,\n        //  90\n        108352,\n        119728,\n        125404,\n        108320,\n        119704,\n        125390,\n        108304,\n        119692,\n        108296,\n        119686,\n        // 100\n        108292,\n        108290,\n        85824,\n        108464,\n        119772,\n        85792,\n        108440,\n        119758,\n        85776,\n        108428,\n        // 110\n        85768,\n        108422,\n        85764,\n        85936,\n        108508,\n        85912,\n        108494,\n        85900,\n        85894,\n        85980,\n        // 120\n        85966,\n        125088,\n        128088,\n        129582,\n        125072,\n        128076,\n        125064,\n        128070,\n        125060,\n        125058,\n        // 130\n        119200,\n        125144,\n        128110,\n        119184,\n        125132,\n        119176,\n        125126,\n        119172,\n        119170,\n        107424,\n        // 140\n        119256,\n        125166,\n        107408,\n        119244,\n        107400,\n        119238,\n        107396,\n        107394,\n        83872,\n        107480,\n        // 150\n        119278,\n        83856,\n        107468,\n        83848,\n        107462,\n        83844,\n        83842,\n        83928,\n        107502,\n        83916,\n        // 160\n        83910,\n        83950,\n        125008,\n        128044,\n        125e3,\n        128038,\n        124996,\n        124994,\n        118992,\n        125036,\n        // 170\n        118984,\n        125030,\n        118980,\n        118978,\n        106960,\n        119020,\n        106952,\n        119014,\n        106948,\n        106946,\n        // 180\n        82896,\n        106988,\n        82888,\n        106982,\n        82884,\n        82882,\n        82924,\n        82918,\n        124968,\n        128022,\n        // 190\n        124964,\n        124962,\n        118888,\n        124982,\n        118884,\n        118882,\n        106728,\n        118902,\n        106724,\n        106722,\n        // 200\n        82408,\n        106742,\n        82404,\n        82402,\n        124948,\n        124946,\n        118836,\n        118834,\n        106612,\n        106610,\n        // 210\n        124224,\n        127664,\n        129372,\n        124192,\n        127640,\n        129358,\n        124176,\n        127628,\n        124168,\n        127622,\n        // 220\n        124164,\n        124162,\n        117568,\n        124336,\n        127708,\n        117536,\n        124312,\n        127694,\n        117520,\n        124300,\n        // 230\n        117512,\n        124294,\n        117508,\n        117506,\n        104256,\n        117680,\n        124380,\n        104224,\n        117656,\n        124366,\n        // 240\n        104208,\n        117644,\n        104200,\n        117638,\n        104196,\n        104194,\n        77632,\n        104368,\n        117724,\n        77600,\n        // 250\n        104344,\n        117710,\n        77584,\n        104332,\n        77576,\n        104326,\n        77572,\n        77744,\n        104412,\n        77720,\n        // 260\n        104398,\n        77708,\n        77702,\n        77788,\n        77774,\n        128672,\n        129880,\n        93168,\n        128656,\n        129868,\n        // 270\n        92664,\n        128648,\n        129862,\n        92412,\n        128644,\n        128642,\n        124064,\n        127576,\n        129326,\n        126368,\n        // 280\n        124048,\n        129902,\n        126352,\n        128716,\n        127558,\n        126344,\n        124036,\n        126340,\n        124034,\n        126338,\n        // 290\n        117152,\n        124120,\n        127598,\n        121760,\n        117136,\n        124108,\n        121744,\n        126412,\n        124102,\n        121736,\n        // 300\n        117124,\n        121732,\n        117122,\n        121730,\n        103328,\n        117208,\n        124142,\n        112544,\n        103312,\n        117196,\n        // 310\n        112528,\n        121804,\n        117190,\n        112520,\n        103300,\n        112516,\n        103298,\n        112514,\n        75680,\n        103384,\n        // 320\n        117230,\n        94112,\n        75664,\n        103372,\n        94096,\n        112588,\n        103366,\n        94088,\n        75652,\n        94084,\n        // 330\n        75650,\n        75736,\n        103406,\n        94168,\n        75724,\n        94156,\n        75718,\n        94150,\n        75758,\n        128592,\n        // 340\n        129836,\n        91640,\n        128584,\n        129830,\n        91388,\n        128580,\n        91262,\n        128578,\n        123984,\n        127532,\n        // 350\n        126160,\n        123976,\n        127526,\n        126152,\n        128614,\n        126148,\n        123970,\n        126146,\n        116944,\n        124012,\n        // 360\n        121296,\n        116936,\n        124006,\n        121288,\n        126182,\n        121284,\n        116930,\n        121282,\n        102864,\n        116972,\n        // 370\n        111568,\n        102856,\n        116966,\n        111560,\n        121318,\n        111556,\n        102850,\n        111554,\n        74704,\n        102892,\n        // 380\n        92112,\n        74696,\n        102886,\n        92104,\n        111590,\n        92100,\n        74690,\n        92098,\n        74732,\n        92140,\n        // 390\n        74726,\n        92134,\n        128552,\n        129814,\n        90876,\n        128548,\n        90750,\n        128546,\n        123944,\n        127510,\n        // 400\n        126056,\n        128566,\n        126052,\n        123938,\n        126050,\n        116840,\n        123958,\n        121064,\n        116836,\n        121060,\n        // 410\n        116834,\n        121058,\n        102632,\n        116854,\n        111080,\n        121078,\n        111076,\n        102626,\n        111074,\n        74216,\n        // 420\n        102646,\n        91112,\n        74212,\n        91108,\n        74210,\n        91106,\n        74230,\n        91126,\n        128532,\n        90494,\n        // 430\n        128530,\n        123924,\n        126004,\n        123922,\n        126002,\n        116788,\n        120948,\n        116786,\n        120946,\n        102516,\n        // 440\n        110836,\n        102514,\n        110834,\n        73972,\n        90612,\n        73970,\n        90610,\n        128522,\n        123914,\n        125978,\n        // 450\n        116762,\n        120890,\n        102458,\n        110714,\n        123552,\n        127320,\n        129198,\n        123536,\n        127308,\n        123528,\n        // 460\n        127302,\n        123524,\n        123522,\n        116128,\n        123608,\n        127342,\n        116112,\n        123596,\n        116104,\n        123590,\n        // 470\n        116100,\n        116098,\n        101280,\n        116184,\n        123630,\n        101264,\n        116172,\n        101256,\n        116166,\n        101252,\n        // 480\n        101250,\n        71584,\n        101336,\n        116206,\n        71568,\n        101324,\n        71560,\n        101318,\n        71556,\n        71554,\n        // 490\n        71640,\n        101358,\n        71628,\n        71622,\n        71662,\n        127824,\n        129452,\n        79352,\n        127816,\n        129446,\n        // 500\n        79100,\n        127812,\n        78974,\n        127810,\n        123472,\n        127276,\n        124624,\n        123464,\n        127270,\n        124616,\n        // 510\n        127846,\n        124612,\n        123458,\n        124610,\n        115920,\n        123500,\n        118224,\n        115912,\n        123494,\n        118216,\n        // 520\n        124646,\n        118212,\n        115906,\n        118210,\n        100816,\n        115948,\n        105424,\n        100808,\n        115942,\n        105416,\n        // 530\n        118246,\n        105412,\n        100802,\n        105410,\n        70608,\n        100844,\n        79824,\n        70600,\n        100838,\n        79816,\n        // 540\n        105446,\n        79812,\n        70594,\n        79810,\n        70636,\n        79852,\n        70630,\n        79846,\n        129960,\n        95728,\n        // 550\n        113404,\n        129956,\n        95480,\n        113278,\n        129954,\n        95356,\n        95294,\n        127784,\n        129430,\n        78588,\n        // 560\n        128872,\n        129974,\n        95996,\n        78462,\n        128868,\n        127778,\n        95870,\n        128866,\n        123432,\n        127254,\n        // 570\n        124520,\n        123428,\n        126696,\n        128886,\n        123426,\n        126692,\n        124514,\n        126690,\n        115816,\n        123446,\n        // 580\n        117992,\n        115812,\n        122344,\n        117988,\n        115810,\n        122340,\n        117986,\n        122338,\n        100584,\n        115830,\n        // 590\n        104936,\n        100580,\n        113640,\n        104932,\n        100578,\n        113636,\n        104930,\n        113634,\n        70120,\n        100598,\n        // 600\n        78824,\n        70116,\n        96232,\n        78820,\n        70114,\n        96228,\n        78818,\n        96226,\n        70134,\n        78838,\n        // 610\n        129940,\n        94968,\n        113022,\n        129938,\n        94844,\n        94782,\n        127764,\n        78206,\n        128820,\n        127762,\n        // 620\n        95102,\n        128818,\n        123412,\n        124468,\n        123410,\n        126580,\n        124466,\n        126578,\n        115764,\n        117876,\n        // 630\n        115762,\n        122100,\n        117874,\n        122098,\n        100468,\n        104692,\n        100466,\n        113140,\n        104690,\n        113138,\n        // 640\n        69876,\n        78324,\n        69874,\n        95220,\n        78322,\n        95218,\n        129930,\n        94588,\n        94526,\n        127754,\n        // 650\n        128794,\n        123402,\n        124442,\n        126522,\n        115738,\n        117818,\n        121978,\n        100410,\n        104570,\n        112890,\n        // 660\n        69754,\n        78074,\n        94714,\n        94398,\n        123216,\n        127148,\n        123208,\n        127142,\n        123204,\n        123202,\n        // 670\n        115408,\n        123244,\n        115400,\n        123238,\n        115396,\n        115394,\n        99792,\n        115436,\n        99784,\n        115430,\n        // 680\n        99780,\n        99778,\n        68560,\n        99820,\n        68552,\n        99814,\n        68548,\n        68546,\n        68588,\n        68582,\n        // 690\n        127400,\n        129238,\n        72444,\n        127396,\n        72318,\n        127394,\n        123176,\n        127126,\n        123752,\n        123172,\n        // 700\n        123748,\n        123170,\n        123746,\n        115304,\n        123190,\n        116456,\n        115300,\n        116452,\n        115298,\n        116450,\n        // 710\n        99560,\n        115318,\n        101864,\n        99556,\n        101860,\n        99554,\n        101858,\n        68072,\n        99574,\n        72680,\n        // 720\n        68068,\n        72676,\n        68066,\n        72674,\n        68086,\n        72694,\n        129492,\n        80632,\n        105854,\n        129490,\n        // 730\n        80508,\n        80446,\n        127380,\n        72062,\n        127924,\n        127378,\n        80766,\n        127922,\n        123156,\n        123700,\n        // 740\n        123154,\n        124788,\n        123698,\n        124786,\n        115252,\n        116340,\n        115250,\n        118516,\n        116338,\n        118514,\n        // 750\n        99444,\n        101620,\n        99442,\n        105972,\n        101618,\n        105970,\n        67828,\n        72180,\n        67826,\n        80884,\n        // 760\n        72178,\n        80882,\n        97008,\n        114044,\n        96888,\n        113982,\n        96828,\n        96798,\n        129482,\n        80252,\n        // 770\n        130010,\n        97148,\n        80190,\n        97086,\n        127370,\n        127898,\n        128954,\n        123146,\n        123674,\n        124730,\n        // 780\n        126842,\n        115226,\n        116282,\n        118394,\n        122618,\n        99386,\n        101498,\n        105722,\n        114170,\n        67706,\n        // 790\n        71930,\n        80378,\n        96632,\n        113854,\n        96572,\n        96542,\n        80062,\n        96702,\n        96444,\n        96414,\n        // 800\n        96350,\n        123048,\n        123044,\n        123042,\n        115048,\n        123062,\n        115044,\n        115042,\n        99048,\n        115062,\n        // 810\n        99044,\n        99042,\n        67048,\n        99062,\n        67044,\n        67042,\n        67062,\n        127188,\n        68990,\n        127186,\n        // 820\n        123028,\n        123316,\n        123026,\n        123314,\n        114996,\n        115572,\n        114994,\n        115570,\n        98932,\n        100084,\n        // 830\n        98930,\n        100082,\n        66804,\n        69108,\n        66802,\n        69106,\n        129258,\n        73084,\n        73022,\n        127178,\n        // 840\n        127450,\n        123018,\n        123290,\n        123834,\n        114970,\n        115514,\n        116602,\n        98874,\n        99962,\n        102138,\n        // 850\n        66682,\n        68858,\n        73210,\n        81272,\n        106174,\n        81212,\n        81182,\n        72894,\n        81342,\n        97648,\n        // 860\n        114364,\n        97592,\n        114334,\n        97564,\n        97550,\n        81084,\n        97724,\n        81054,\n        97694,\n        97464,\n        // 870\n        114270,\n        97436,\n        97422,\n        80990,\n        97502,\n        97372,\n        97358,\n        97326,\n        114868,\n        114866,\n        // 880\n        98676,\n        98674,\n        66292,\n        66290,\n        123098,\n        114842,\n        115130,\n        98618,\n        99194,\n        66170,\n        // 890\n        67322,\n        69310,\n        73404,\n        73374,\n        81592,\n        106334,\n        81564,\n        81550,\n        73310,\n        81630,\n        // 900\n        97968,\n        114524,\n        97944,\n        114510,\n        97932,\n        97926,\n        81500,\n        98012,\n        81486,\n        97998,\n        // 910\n        97880,\n        114478,\n        97868,\n        97862,\n        81454,\n        97902,\n        97836,\n        97830,\n        69470,\n        73564,\n        // 920\n        73550,\n        81752,\n        106414,\n        81740,\n        81734,\n        73518,\n        81774,\n        81708,\n        81702\n      ],\n      // 929\n      [\n        // cluster 6 -----------------------------------------------------------------------\n        109536,\n        120312,\n        86976,\n        109040,\n        120060,\n        86496,\n        108792,\n        119934,\n        86256,\n        108668,\n        //  10\n        86136,\n        129744,\n        89056,\n        110072,\n        129736,\n        88560,\n        109820,\n        129732,\n        88312,\n        109694,\n        //  20\n        129730,\n        88188,\n        128464,\n        129772,\n        89592,\n        128456,\n        129766,\n        89340,\n        128452,\n        89214,\n        //  30\n        128450,\n        125904,\n        128492,\n        125896,\n        128486,\n        125892,\n        125890,\n        120784,\n        125932,\n        120776,\n        //  40\n        125926,\n        120772,\n        120770,\n        110544,\n        120812,\n        110536,\n        120806,\n        110532,\n        84928,\n        108016,\n        //  50\n        119548,\n        84448,\n        107768,\n        119422,\n        84208,\n        107644,\n        84088,\n        107582,\n        84028,\n        129640,\n        //  60\n        85488,\n        108284,\n        129636,\n        85240,\n        108158,\n        129634,\n        85116,\n        85054,\n        128232,\n        129654,\n        //  70\n        85756,\n        128228,\n        85630,\n        128226,\n        125416,\n        128246,\n        125412,\n        125410,\n        119784,\n        125430,\n        //  80\n        119780,\n        119778,\n        108520,\n        119798,\n        108516,\n        108514,\n        83424,\n        107256,\n        119166,\n        83184,\n        //  90\n        107132,\n        83064,\n        107070,\n        83004,\n        82974,\n        129588,\n        83704,\n        107390,\n        129586,\n        83580,\n        // 100\n        83518,\n        128116,\n        83838,\n        128114,\n        125172,\n        125170,\n        119284,\n        119282,\n        107508,\n        107506,\n        // 110\n        82672,\n        106876,\n        82552,\n        106814,\n        82492,\n        82462,\n        129562,\n        82812,\n        82750,\n        128058,\n        // 120\n        125050,\n        119034,\n        82296,\n        106686,\n        82236,\n        82206,\n        82366,\n        82108,\n        82078,\n        76736,\n        // 130\n        103920,\n        117500,\n        76256,\n        103672,\n        117374,\n        76016,\n        103548,\n        75896,\n        103486,\n        75836,\n        // 140\n        129384,\n        77296,\n        104188,\n        129380,\n        77048,\n        104062,\n        129378,\n        76924,\n        76862,\n        127720,\n        // 150\n        129398,\n        77564,\n        127716,\n        77438,\n        127714,\n        124392,\n        127734,\n        124388,\n        124386,\n        117736,\n        // 160\n        124406,\n        117732,\n        117730,\n        104424,\n        117750,\n        104420,\n        104418,\n        112096,\n        121592,\n        126334,\n        // 170\n        92608,\n        111856,\n        121468,\n        92384,\n        111736,\n        121406,\n        92272,\n        111676,\n        92216,\n        111646,\n        // 180\n        92188,\n        75232,\n        103160,\n        117118,\n        93664,\n        74992,\n        103036,\n        93424,\n        112252,\n        102974,\n        // 190\n        93304,\n        74812,\n        93244,\n        74782,\n        93214,\n        129332,\n        75512,\n        103294,\n        129908,\n        129330,\n        // 200\n        93944,\n        75388,\n        129906,\n        93820,\n        75326,\n        93758,\n        127604,\n        75646,\n        128756,\n        127602,\n        // 210\n        94078,\n        128754,\n        124148,\n        126452,\n        124146,\n        126450,\n        117236,\n        121844,\n        117234,\n        121842,\n        // 220\n        103412,\n        103410,\n        91584,\n        111344,\n        121212,\n        91360,\n        111224,\n        121150,\n        91248,\n        111164,\n        // 230\n        91192,\n        111134,\n        91164,\n        91150,\n        74480,\n        102780,\n        91888,\n        74360,\n        102718,\n        91768,\n        // 240\n        111422,\n        91708,\n        74270,\n        91678,\n        129306,\n        74620,\n        129850,\n        92028,\n        74558,\n        91966,\n        // 250\n        127546,\n        128634,\n        124026,\n        126202,\n        116986,\n        121338,\n        102906,\n        90848,\n        110968,\n        121022,\n        // 260\n        90736,\n        110908,\n        90680,\n        110878,\n        90652,\n        90638,\n        74104,\n        102590,\n        91e3,\n        74044,\n        // 270\n        90940,\n        74014,\n        90910,\n        74174,\n        91070,\n        90480,\n        110780,\n        90424,\n        110750,\n        90396,\n        // 280\n        90382,\n        73916,\n        90556,\n        73886,\n        90526,\n        90296,\n        110686,\n        90268,\n        90254,\n        73822,\n        // 290\n        90334,\n        90204,\n        90190,\n        71136,\n        101112,\n        116094,\n        70896,\n        100988,\n        70776,\n        100926,\n        // 300\n        70716,\n        70686,\n        129204,\n        71416,\n        101246,\n        129202,\n        71292,\n        71230,\n        127348,\n        71550,\n        // 310\n        127346,\n        123636,\n        123634,\n        116212,\n        116210,\n        101364,\n        101362,\n        79296,\n        105200,\n        118140,\n        // 320\n        79072,\n        105080,\n        118078,\n        78960,\n        105020,\n        78904,\n        104990,\n        78876,\n        78862,\n        70384,\n        // 330\n        100732,\n        79600,\n        70264,\n        100670,\n        79480,\n        105278,\n        79420,\n        70174,\n        79390,\n        129178,\n        // 340\n        70524,\n        129466,\n        79740,\n        70462,\n        79678,\n        127290,\n        127866,\n        123514,\n        124666,\n        115962,\n        // 350\n        118266,\n        100858,\n        113376,\n        122232,\n        126654,\n        95424,\n        113264,\n        122172,\n        95328,\n        113208,\n        // 360\n        122142,\n        95280,\n        113180,\n        95256,\n        113166,\n        95244,\n        78560,\n        104824,\n        117950,\n        95968,\n        // 370\n        78448,\n        104764,\n        95856,\n        113468,\n        104734,\n        95800,\n        78364,\n        95772,\n        78350,\n        95758,\n        // 380\n        70008,\n        100542,\n        78712,\n        69948,\n        96120,\n        78652,\n        69918,\n        96060,\n        78622,\n        96030,\n        // 390\n        70078,\n        78782,\n        96190,\n        94912,\n        113008,\n        122044,\n        94816,\n        112952,\n        122014,\n        94768,\n        // 400\n        112924,\n        94744,\n        112910,\n        94732,\n        94726,\n        78192,\n        104636,\n        95088,\n        78136,\n        104606,\n        // 410\n        95032,\n        113054,\n        95004,\n        78094,\n        94990,\n        69820,\n        78268,\n        69790,\n        95164,\n        78238,\n        // 420\n        95134,\n        94560,\n        112824,\n        121950,\n        94512,\n        112796,\n        94488,\n        112782,\n        94476,\n        94470,\n        // 430\n        78008,\n        104542,\n        94648,\n        77980,\n        94620,\n        77966,\n        94606,\n        69726,\n        78046,\n        94686,\n        // 440\n        94384,\n        112732,\n        94360,\n        112718,\n        94348,\n        94342,\n        77916,\n        94428,\n        77902,\n        94414,\n        // 450\n        94296,\n        112686,\n        94284,\n        94278,\n        77870,\n        94318,\n        94252,\n        94246,\n        68336,\n        99708,\n        // 460\n        68216,\n        99646,\n        68156,\n        68126,\n        68476,\n        68414,\n        127162,\n        123258,\n        115450,\n        99834,\n        // 470\n        72416,\n        101752,\n        116414,\n        72304,\n        101692,\n        72248,\n        101662,\n        72220,\n        72206,\n        67960,\n        // 480\n        99518,\n        72568,\n        67900,\n        72508,\n        67870,\n        72478,\n        68030,\n        72638,\n        80576,\n        105840,\n        // 490\n        118460,\n        80480,\n        105784,\n        118430,\n        80432,\n        105756,\n        80408,\n        105742,\n        80396,\n        80390,\n        // 500\n        72048,\n        101564,\n        80752,\n        71992,\n        101534,\n        80696,\n        71964,\n        80668,\n        71950,\n        80654,\n        // 510\n        67772,\n        72124,\n        67742,\n        80828,\n        72094,\n        80798,\n        114016,\n        122552,\n        126814,\n        96832,\n        // 520\n        113968,\n        122524,\n        96800,\n        113944,\n        122510,\n        96784,\n        113932,\n        96776,\n        113926,\n        96772,\n        // 530\n        80224,\n        105656,\n        118366,\n        97120,\n        80176,\n        105628,\n        97072,\n        114076,\n        105614,\n        97048,\n        // 540\n        80140,\n        97036,\n        80134,\n        97030,\n        71864,\n        101470,\n        80312,\n        71836,\n        97208,\n        80284,\n        // 550\n        71822,\n        97180,\n        80270,\n        97166,\n        67678,\n        71902,\n        80350,\n        97246,\n        96576,\n        113840,\n        // 560\n        122460,\n        96544,\n        113816,\n        122446,\n        96528,\n        113804,\n        96520,\n        113798,\n        96516,\n        96514,\n        // 570\n        80048,\n        105564,\n        96688,\n        80024,\n        105550,\n        96664,\n        113870,\n        96652,\n        80006,\n        96646,\n        // 580\n        71772,\n        80092,\n        71758,\n        96732,\n        80078,\n        96718,\n        96416,\n        113752,\n        122414,\n        96400,\n        // 590\n        113740,\n        96392,\n        113734,\n        96388,\n        96386,\n        79960,\n        105518,\n        96472,\n        79948,\n        96460,\n        // 600\n        79942,\n        96454,\n        71726,\n        79982,\n        96494,\n        96336,\n        113708,\n        96328,\n        113702,\n        96324,\n        // 610\n        96322,\n        79916,\n        96364,\n        79910,\n        96358,\n        96296,\n        113686,\n        96292,\n        96290,\n        79894,\n        // 620\n        96310,\n        66936,\n        99006,\n        66876,\n        66846,\n        67006,\n        68976,\n        100028,\n        68920,\n        99998,\n        // 630\n        68892,\n        68878,\n        66748,\n        69052,\n        66718,\n        69022,\n        73056,\n        102072,\n        116574,\n        73008,\n        // 640\n        102044,\n        72984,\n        102030,\n        72972,\n        72966,\n        68792,\n        99934,\n        73144,\n        68764,\n        73116,\n        // 650\n        68750,\n        73102,\n        66654,\n        68830,\n        73182,\n        81216,\n        106160,\n        118620,\n        81184,\n        106136,\n        // 660\n        118606,\n        81168,\n        106124,\n        81160,\n        106118,\n        81156,\n        81154,\n        72880,\n        101980,\n        81328,\n        // 670\n        72856,\n        101966,\n        81304,\n        106190,\n        81292,\n        72838,\n        81286,\n        68700,\n        72924,\n        68686,\n        // 680\n        81372,\n        72910,\n        81358,\n        114336,\n        122712,\n        126894,\n        114320,\n        122700,\n        114312,\n        122694,\n        // 690\n        114308,\n        114306,\n        81056,\n        106072,\n        118574,\n        97696,\n        81040,\n        106060,\n        97680,\n        114380,\n        // 700\n        106054,\n        97672,\n        81028,\n        97668,\n        81026,\n        97666,\n        72792,\n        101934,\n        81112,\n        72780,\n        // 710\n        97752,\n        81100,\n        72774,\n        97740,\n        81094,\n        97734,\n        68654,\n        72814,\n        81134,\n        97774,\n        // 720\n        114256,\n        122668,\n        114248,\n        122662,\n        114244,\n        114242,\n        80976,\n        106028,\n        97488,\n        80968,\n        // 730\n        106022,\n        97480,\n        114278,\n        97476,\n        80962,\n        97474,\n        72748,\n        81004,\n        72742,\n        97516,\n        // 740\n        80998,\n        97510,\n        114216,\n        122646,\n        114212,\n        114210,\n        80936,\n        106006,\n        97384,\n        80932,\n        // 750\n        97380,\n        80930,\n        97378,\n        72726,\n        80950,\n        97398,\n        114196,\n        114194,\n        80916,\n        97332,\n        // 760\n        80914,\n        97330,\n        66236,\n        66206,\n        67256,\n        99166,\n        67228,\n        67214,\n        66142,\n        67294,\n        // 770\n        69296,\n        100188,\n        69272,\n        100174,\n        69260,\n        69254,\n        67164,\n        69340,\n        67150,\n        69326,\n        // 780\n        73376,\n        102232,\n        116654,\n        73360,\n        102220,\n        73352,\n        102214,\n        73348,\n        73346,\n        69208,\n        // 790\n        100142,\n        73432,\n        102254,\n        73420,\n        69190,\n        73414,\n        67118,\n        69230,\n        73454,\n        106320,\n        // 800\n        118700,\n        106312,\n        118694,\n        106308,\n        106306,\n        73296,\n        102188,\n        81616,\n        106348,\n        102182,\n        // 810\n        81608,\n        73284,\n        81604,\n        73282,\n        81602,\n        69164,\n        73324,\n        69158,\n        81644,\n        73318,\n        // 820\n        81638,\n        122792,\n        126934,\n        122788,\n        122786,\n        106280,\n        118678,\n        114536,\n        106276,\n        114532,\n        // 830\n        106274,\n        114530,\n        73256,\n        102166,\n        81512,\n        73252,\n        98024,\n        81508,\n        73250,\n        98020,\n        // 840\n        81506,\n        98018,\n        69142,\n        73270,\n        81526,\n        98038,\n        122772,\n        122770,\n        106260,\n        114484,\n        // 850\n        106258,\n        114482,\n        73236,\n        81460,\n        73234,\n        97908,\n        81458,\n        97906,\n        122762,\n        106250,\n        // 860\n        114458,\n        73226,\n        81434,\n        97850,\n        66396,\n        66382,\n        67416,\n        99246,\n        67404,\n        67398,\n        // 870\n        66350,\n        67438,\n        69456,\n        100268,\n        69448,\n        100262,\n        69444,\n        69442,\n        67372,\n        69484,\n        // 880\n        67366,\n        69478,\n        102312,\n        116694,\n        102308,\n        102306,\n        69416,\n        100246,\n        73576,\n        102326,\n        // 890\n        73572,\n        69410,\n        73570,\n        67350,\n        69430,\n        73590,\n        118740,\n        118738,\n        102292,\n        106420,\n        // 900\n        102290,\n        106418,\n        69396,\n        73524,\n        69394,\n        81780,\n        73522,\n        81778,\n        118730,\n        102282,\n        // 910\n        106394,\n        69386,\n        73498,\n        81722,\n        66476,\n        66470,\n        67496,\n        99286,\n        67492,\n        67490,\n        // 920\n        66454,\n        67510,\n        100308,\n        100306,\n        67476,\n        69556,\n        67474,\n        69554,\n        116714\n      ]\n      // 929\n    ],\n    /**\n    * Array of factors of the Reed-Solomon polynomial equations used for error correction; one sub array for each correction level (0-8).\n    * @protected\n    */\n    rsfactors: [\n      [\n        // ECL 0 (2 factors) -------------------------------------------------------------------------------\n        27,\n        917\n      ],\n      //   2\n      [\n        // ECL 1 (4 factors) -------------------------------------------------------------------------------\n        522,\n        568,\n        723,\n        809\n      ],\n      //   4\n      [\n        // ECL 2 (8 factors) -------------------------------------------------------------------------------\n        237,\n        308,\n        436,\n        284,\n        646,\n        653,\n        428,\n        379\n      ],\n      //   8\n      [\n        // ECL 3 (16 factors) ------------------------------------------------------------------------------\n        274,\n        562,\n        232,\n        755,\n        599,\n        524,\n        801,\n        132,\n        295,\n        116,\n        442,\n        428,\n        295,\n        42,\n        176,\n        65\n      ],\n      //  16\n      [\n        // ECL 4 (32 factors) ------------------------------------------------------------------------------\n        361,\n        575,\n        922,\n        525,\n        176,\n        586,\n        640,\n        321,\n        536,\n        742,\n        677,\n        742,\n        687,\n        284,\n        193,\n        517,\n        //  16\n        273,\n        494,\n        263,\n        147,\n        593,\n        800,\n        571,\n        320,\n        803,\n        133,\n        231,\n        390,\n        685,\n        330,\n        63,\n        410\n      ],\n      //  32\n      [\n        // ECL 5 (64 factors) ------------------------------------------------------------------------------\n        539,\n        422,\n        6,\n        93,\n        862,\n        771,\n        453,\n        106,\n        610,\n        287,\n        107,\n        505,\n        733,\n        877,\n        381,\n        612,\n        //  16\n        723,\n        476,\n        462,\n        172,\n        430,\n        609,\n        858,\n        822,\n        543,\n        376,\n        511,\n        400,\n        672,\n        762,\n        283,\n        184,\n        //  32\n        440,\n        35,\n        519,\n        31,\n        460,\n        594,\n        225,\n        535,\n        517,\n        352,\n        605,\n        158,\n        651,\n        201,\n        488,\n        502,\n        //  48\n        648,\n        733,\n        717,\n        83,\n        404,\n        97,\n        280,\n        771,\n        840,\n        629,\n        4,\n        381,\n        843,\n        623,\n        264,\n        543\n      ],\n      //  64\n      [\n        // ECL 6 (128 factors) -----------------------------------------------------------------------------\n        521,\n        310,\n        864,\n        547,\n        858,\n        580,\n        296,\n        379,\n        53,\n        779,\n        897,\n        444,\n        400,\n        925,\n        749,\n        415,\n        //  16\n        822,\n        93,\n        217,\n        208,\n        928,\n        244,\n        583,\n        620,\n        246,\n        148,\n        447,\n        631,\n        292,\n        908,\n        490,\n        704,\n        //  32\n        516,\n        258,\n        457,\n        907,\n        594,\n        723,\n        674,\n        292,\n        272,\n        96,\n        684,\n        432,\n        686,\n        606,\n        860,\n        569,\n        //  48\n        193,\n        219,\n        129,\n        186,\n        236,\n        287,\n        192,\n        775,\n        278,\n        173,\n        40,\n        379,\n        712,\n        463,\n        646,\n        776,\n        //  64\n        171,\n        491,\n        297,\n        763,\n        156,\n        732,\n        95,\n        270,\n        447,\n        90,\n        507,\n        48,\n        228,\n        821,\n        808,\n        898,\n        //  80\n        784,\n        663,\n        627,\n        378,\n        382,\n        262,\n        380,\n        602,\n        754,\n        336,\n        89,\n        614,\n        87,\n        432,\n        670,\n        616,\n        //  96\n        157,\n        374,\n        242,\n        726,\n        600,\n        269,\n        375,\n        898,\n        845,\n        454,\n        354,\n        130,\n        814,\n        587,\n        804,\n        34,\n        // 112\n        211,\n        330,\n        539,\n        297,\n        827,\n        865,\n        37,\n        517,\n        834,\n        315,\n        550,\n        86,\n        801,\n        4,\n        108,\n        539\n      ],\n      // 128\n      [\n        // ECL 7 (256 factors) -----------------------------------------------------------------------------\n        524,\n        894,\n        75,\n        766,\n        882,\n        857,\n        74,\n        204,\n        82,\n        586,\n        708,\n        250,\n        905,\n        786,\n        138,\n        720,\n        //  16\n        858,\n        194,\n        311,\n        913,\n        275,\n        190,\n        375,\n        850,\n        438,\n        733,\n        194,\n        280,\n        201,\n        280,\n        828,\n        757,\n        //  32\n        710,\n        814,\n        919,\n        89,\n        68,\n        569,\n        11,\n        204,\n        796,\n        605,\n        540,\n        913,\n        801,\n        700,\n        799,\n        137,\n        //  48\n        439,\n        418,\n        592,\n        668,\n        353,\n        859,\n        370,\n        694,\n        325,\n        240,\n        216,\n        257,\n        284,\n        549,\n        209,\n        884,\n        //  64\n        315,\n        70,\n        329,\n        793,\n        490,\n        274,\n        877,\n        162,\n        749,\n        812,\n        684,\n        461,\n        334,\n        376,\n        849,\n        521,\n        //  80\n        307,\n        291,\n        803,\n        712,\n        19,\n        358,\n        399,\n        908,\n        103,\n        511,\n        51,\n        8,\n        517,\n        225,\n        289,\n        470,\n        //  96\n        637,\n        731,\n        66,\n        255,\n        917,\n        269,\n        463,\n        830,\n        730,\n        433,\n        848,\n        585,\n        136,\n        538,\n        906,\n        90,\n        // 112\n        2,\n        290,\n        743,\n        199,\n        655,\n        903,\n        329,\n        49,\n        802,\n        580,\n        355,\n        588,\n        188,\n        462,\n        10,\n        134,\n        // 128\n        628,\n        320,\n        479,\n        130,\n        739,\n        71,\n        263,\n        318,\n        374,\n        601,\n        192,\n        605,\n        142,\n        673,\n        687,\n        234,\n        // 144\n        722,\n        384,\n        177,\n        752,\n        607,\n        640,\n        455,\n        193,\n        689,\n        707,\n        805,\n        641,\n        48,\n        60,\n        732,\n        621,\n        // 160\n        895,\n        544,\n        261,\n        852,\n        655,\n        309,\n        697,\n        755,\n        756,\n        60,\n        231,\n        773,\n        434,\n        421,\n        726,\n        528,\n        // 176\n        503,\n        118,\n        49,\n        795,\n        32,\n        144,\n        500,\n        238,\n        836,\n        394,\n        280,\n        566,\n        319,\n        9,\n        647,\n        550,\n        // 192\n        73,\n        914,\n        342,\n        126,\n        32,\n        681,\n        331,\n        792,\n        620,\n        60,\n        609,\n        441,\n        180,\n        791,\n        893,\n        754,\n        // 208\n        605,\n        383,\n        228,\n        749,\n        760,\n        213,\n        54,\n        297,\n        134,\n        54,\n        834,\n        299,\n        922,\n        191,\n        910,\n        532,\n        // 224\n        609,\n        829,\n        189,\n        20,\n        167,\n        29,\n        872,\n        449,\n        83,\n        402,\n        41,\n        656,\n        505,\n        579,\n        481,\n        173,\n        // 240\n        404,\n        251,\n        688,\n        95,\n        497,\n        555,\n        642,\n        543,\n        307,\n        159,\n        924,\n        558,\n        648,\n        55,\n        497,\n        10\n      ],\n      // 256\n      [\n        // ECL 8 (512 factors) -----------------------------------------------------------------------------\n        352,\n        77,\n        373,\n        504,\n        35,\n        599,\n        428,\n        207,\n        409,\n        574,\n        118,\n        498,\n        285,\n        380,\n        350,\n        492,\n        //  16\n        197,\n        265,\n        920,\n        155,\n        914,\n        299,\n        229,\n        643,\n        294,\n        871,\n        306,\n        88,\n        87,\n        193,\n        352,\n        781,\n        //  32\n        846,\n        75,\n        327,\n        520,\n        435,\n        543,\n        203,\n        666,\n        249,\n        346,\n        781,\n        621,\n        640,\n        268,\n        794,\n        534,\n        //  48\n        539,\n        781,\n        408,\n        390,\n        644,\n        102,\n        476,\n        499,\n        290,\n        632,\n        545,\n        37,\n        858,\n        916,\n        552,\n        41,\n        //  64\n        542,\n        289,\n        122,\n        272,\n        383,\n        800,\n        485,\n        98,\n        752,\n        472,\n        761,\n        107,\n        784,\n        860,\n        658,\n        741,\n        //  80\n        290,\n        204,\n        681,\n        407,\n        855,\n        85,\n        99,\n        62,\n        482,\n        180,\n        20,\n        297,\n        451,\n        593,\n        913,\n        142,\n        //  96\n        808,\n        684,\n        287,\n        536,\n        561,\n        76,\n        653,\n        899,\n        729,\n        567,\n        744,\n        390,\n        513,\n        192,\n        516,\n        258,\n        // 112\n        240,\n        518,\n        794,\n        395,\n        768,\n        848,\n        51,\n        610,\n        384,\n        168,\n        190,\n        826,\n        328,\n        596,\n        786,\n        303,\n        // 128\n        570,\n        381,\n        415,\n        641,\n        156,\n        237,\n        151,\n        429,\n        531,\n        207,\n        676,\n        710,\n        89,\n        168,\n        304,\n        402,\n        // 144\n        40,\n        708,\n        575,\n        162,\n        864,\n        229,\n        65,\n        861,\n        841,\n        512,\n        164,\n        477,\n        221,\n        92,\n        358,\n        785,\n        // 160\n        288,\n        357,\n        850,\n        836,\n        827,\n        736,\n        707,\n        94,\n        8,\n        494,\n        114,\n        521,\n        2,\n        499,\n        851,\n        543,\n        // 176\n        152,\n        729,\n        771,\n        95,\n        248,\n        361,\n        578,\n        323,\n        856,\n        797,\n        289,\n        51,\n        684,\n        466,\n        533,\n        820,\n        // 192\n        669,\n        45,\n        902,\n        452,\n        167,\n        342,\n        244,\n        173,\n        35,\n        463,\n        651,\n        51,\n        699,\n        591,\n        452,\n        578,\n        // 208\n        37,\n        124,\n        298,\n        332,\n        552,\n        43,\n        427,\n        119,\n        662,\n        777,\n        475,\n        850,\n        764,\n        364,\n        578,\n        911,\n        // 224\n        283,\n        711,\n        472,\n        420,\n        245,\n        288,\n        594,\n        394,\n        511,\n        327,\n        589,\n        777,\n        699,\n        688,\n        43,\n        408,\n        // 240\n        842,\n        383,\n        721,\n        521,\n        560,\n        644,\n        714,\n        559,\n        62,\n        145,\n        873,\n        663,\n        713,\n        159,\n        672,\n        729,\n        // 256\n        624,\n        59,\n        193,\n        417,\n        158,\n        209,\n        563,\n        564,\n        343,\n        693,\n        109,\n        608,\n        563,\n        365,\n        181,\n        772,\n        // 272\n        677,\n        310,\n        248,\n        353,\n        708,\n        410,\n        579,\n        870,\n        617,\n        841,\n        632,\n        860,\n        289,\n        536,\n        35,\n        777,\n        // 288\n        618,\n        586,\n        424,\n        833,\n        77,\n        597,\n        346,\n        269,\n        757,\n        632,\n        695,\n        751,\n        331,\n        247,\n        184,\n        45,\n        // 304\n        787,\n        680,\n        18,\n        66,\n        407,\n        369,\n        54,\n        492,\n        228,\n        613,\n        830,\n        922,\n        437,\n        519,\n        644,\n        905,\n        // 320\n        789,\n        420,\n        305,\n        441,\n        207,\n        300,\n        892,\n        827,\n        141,\n        537,\n        381,\n        662,\n        513,\n        56,\n        252,\n        341,\n        // 336\n        242,\n        797,\n        838,\n        837,\n        720,\n        224,\n        307,\n        631,\n        61,\n        87,\n        560,\n        310,\n        756,\n        665,\n        397,\n        808,\n        // 352\n        851,\n        309,\n        473,\n        795,\n        378,\n        31,\n        647,\n        915,\n        459,\n        806,\n        590,\n        731,\n        425,\n        216,\n        548,\n        249,\n        // 368\n        321,\n        881,\n        699,\n        535,\n        673,\n        782,\n        210,\n        815,\n        905,\n        303,\n        843,\n        922,\n        281,\n        73,\n        469,\n        791,\n        // 384\n        660,\n        162,\n        498,\n        308,\n        155,\n        422,\n        907,\n        817,\n        187,\n        62,\n        16,\n        425,\n        535,\n        336,\n        286,\n        437,\n        // 400\n        375,\n        273,\n        610,\n        296,\n        183,\n        923,\n        116,\n        667,\n        751,\n        353,\n        62,\n        366,\n        691,\n        379,\n        687,\n        842,\n        // 416\n        37,\n        357,\n        720,\n        742,\n        330,\n        5,\n        39,\n        923,\n        311,\n        424,\n        242,\n        749,\n        321,\n        54,\n        669,\n        316,\n        // 432\n        342,\n        299,\n        534,\n        105,\n        667,\n        488,\n        640,\n        672,\n        576,\n        540,\n        316,\n        486,\n        721,\n        610,\n        46,\n        656,\n        // 448\n        447,\n        171,\n        616,\n        464,\n        190,\n        531,\n        297,\n        321,\n        762,\n        752,\n        533,\n        175,\n        134,\n        14,\n        381,\n        433,\n        // 464\n        717,\n        45,\n        111,\n        20,\n        596,\n        284,\n        736,\n        138,\n        646,\n        411,\n        877,\n        669,\n        141,\n        919,\n        45,\n        780,\n        // 480\n        407,\n        164,\n        332,\n        899,\n        165,\n        726,\n        600,\n        325,\n        498,\n        655,\n        357,\n        752,\n        768,\n        223,\n        849,\n        647,\n        // 496\n        63,\n        310,\n        863,\n        251,\n        366,\n        304,\n        282,\n        738,\n        675,\n        410,\n        389,\n        244,\n        31,\n        121,\n        303,\n        263\n      ]\n      // 512\n    ],\n    /**\n    * This is the class constructor.\n    * Creates a PDF417 object\n    * @param code (string) code to represent using PDF417\n    * @param ecl (int) error correction level (0-8); default -1 = automatic correction level\n    * @param aspectratio (float) the width to height of the symbol (excluding quiet zones)\n    */\n    init: function(x, e, n) {\n      if (x = unescape(encodeURIComponent(x)), e = e || -1, n = n || 2, this.barcode_array = {}, x === \"\")\n        return !1;\n      let c = this.getInputSequences(x), t = [];\n      for (var a = 0; a < c.length; a++) {\n        var r = this.getCompaction(c[a][0], c[a][1], !0);\n        t = t.concat(r);\n      }\n      t[0] == 900 && t.shift();\n      var f = t.length;\n      if (f > 925)\n        return !1;\n      e = this.getErrorCorrectionLevel(e, f);\n      var i = 2 << e, s = f + i + 1, u = Math.round(\n        (Math.sqrt(4761 + 68 * n * this.ROWHEIGHT * s) - 69) / 34\n      );\n      u < 1 ? u = 1 : u > 30 && (u = 30);\n      var l = Math.ceil(s / u), d = u * l;\n      (l < 3 || l > 90) && (l < 3 ? l = 3 : l > 90 && (l = 90), u = Math.ceil(d / l), d = u * l), d > 928 && (Math.abs(n - 17 * 29 / 32) < Math.abs(n - 17 * 16 / 58) ? (u = 29, l = 32) : (u = 16, l = 58), d = 928);\n      var b = d - s;\n      b > 0 && (d - l == s ? (--l, d -= l) : t = t.concat(this._array_fill(0, b, 900)));\n      var _ = d - i;\n      t.unshift(_);\n      var h = this.getErrorCorrection(t, e);\n      t = t.concat(h);\n      var p = this._str_repeat(\"0\", this.QUIETH) + this.start_pattern, v = this.stop_pattern + \"\" + this._str_repeat(\"0\", this.QUIETH);\n      this.barcode_array.num_rows = l * this.ROWHEIGHT + 2 * this.QUIETV, this.barcode_array.num_cols = (u + 2) * 17 + 35 + 2 * this.QUIETH, this.barcode_array.bcode = [];\n      var w;\n      if (this.QUIETV > 0) {\n        w = this._array_fill(0, this.barcode_array.num_cols, 0);\n        for (var a = 0; a < this.QUIETV; ++a)\n          this.barcode_array.bcode.push(w);\n      }\n      for (var g, m = 0, E = 0, y = 0; y < l; ++y) {\n        var S = p;\n        switch (E) {\n          case 0: {\n            g = 30 * this._intval(y / 3) + this._intval((l - 1) / 3);\n            break;\n          }\n          case 1: {\n            g = 30 * this._intval(y / 3) + e * 3 + (l - 1) % 3;\n            break;\n          }\n          case 2: {\n            g = 30 * this._intval(y / 3) + (u - 1);\n            break;\n          }\n        }\n        S += this._sprintf(\"%17b\", this.clusters[E][g]);\n        for (var C = 0; C < u; ++C)\n          S += this._sprintf(\"%17b\", this.clusters[E][t[m]]), ++m;\n        switch (E) {\n          case 0: {\n            g = 30 * this._intval(y / 3) + (u - 1);\n            break;\n          }\n          case 1: {\n            g = 30 * this._intval(y / 3) + this._intval((l - 1) / 3);\n            break;\n          }\n          case 2: {\n            g = 30 * this._intval(y / 3) + e * 3 + (l - 1) % 3;\n            break;\n          }\n        }\n        S += this._sprintf(\"%17b\", this.clusters[E][g]), S += v;\n        for (var B = this._preg_split(\"//\", S, -1, \"PREG_SPLIT_NO_EMPTY\"), A = 0; A < this.ROWHEIGHT; ++A)\n          this.barcode_array.bcode.push(B);\n        ++E, E > 2 && (E = 0);\n      }\n      if (this.QUIETV > 0)\n        for (var a = 0; a < this.QUIETV; ++a)\n          this.barcode_array.bcode.push(w);\n    },\n    getInputSequences: function(x) {\n      var e = [], n = [];\n      if (n = x.match(/([0-9]{13,44})/g), n == null)\n        n = [];\n      else\n        for (var c = 0, t = 0; c < n.length; c++)\n          t = x.indexOf(n[c], t), n[c] = [n[c], t], t += n[c][0].length;\n      n.push([\"\", x.length]);\n      for (var t = 0, a = 0; a < n.length; a++) {\n        var r = n[a], f = r[0].length;\n        if (r[1] > 0) {\n          var i = x.substr(t, r[1] - t), s = [];\n          if (s = i.match(/([\\x09\\x0a\\x0d\\x20-\\x7e]{5,})/g), s == null)\n            s = [];\n          else\n            for (var c = 0; c < s.length; c++) {\n              var t = i.indexOf(s[c]);\n              s[c] = [s[c], t];\n            }\n          s.push([\"\", i.length]);\n          for (var u = 0, l = 0; l < s.length; l++) {\n            var d = s[l], b = d[0].length;\n            if (d[1] > 0) {\n              var _ = i.substr(u, d[1] - u);\n              _.length > 0 && (_.length == 1 && e.length > 0 && e[e.length - 1][0] == 900 ? e.push([913, _]) : _.length % 6 == 0 ? e.push([924, _]) : e.push([901, _]));\n            }\n            b > 0 && e.push([900, d[0]]), u = d[1] + b;\n          }\n        }\n        f > 0 && e.push([902, r[0]]), t = r[1] + f;\n      }\n      return e;\n    },\n    getCompaction: function(x, e, n) {\n      n = n || !0;\n      var c = [];\n      switch (x) {\n        case 900: {\n          for (var t = 0, a = [], r = e.length, f = 0; f < r; ++f) {\n            var i = this._ord(e.charAt(f)), s;\n            if ((s = this._array_search(i, this.textsubmodes[t])) !== !1)\n              a.push(s);\n            else\n              for (var u = 0; u < 4; ++u)\n                if (u != t && (s = this._array_search(i, this.textsubmodes[u])) !== !1) {\n                  (f + 1 == r || f + 1 < r && this._array_search(\n                    this._ord(e.charAt(f + 1)),\n                    this.textsubmodes[t]\n                  ) !== !1) && (u == 3 || u == 0 && t == 1) ? u == 3 ? a.push(29) : a.push(27) : (a = a.concat(this.textlatch[\"\" + t + u]), t = u), a.push(s);\n                  break;\n                }\n          }\n          var l = a.length;\n          l % 2 != 0 && (a.push(29), ++l);\n          for (var f = 0; f < l; f += 2)\n            c.push(30 * parseInt(a[f]) + parseInt(a[f + 1]));\n          break;\n        }\n        case 901:\n        case 924: {\n          for (var d, b, r; (r = e.length) > 0; ) {\n            if (r > 6 ? (d = e.substring(6), e = e.substring(0, 6), b = 6) : (d = \"\", b = e.length), b == 6) {\n              var _ = k(\"\" + this._ord(e.charAt(0)), \"1099511627776\");\n              _ = z(_, k(\"\" + this._ord(e.charAt(1)), \"4294967296\")), _ = z(_, k(\"\" + this._ord(e.charAt(2)), \"16777216\")), _ = z(_, k(\"\" + this._ord(e.charAt(3)), \"65536\")), _ = z(_, k(\"\" + this._ord(e.charAt(4)), \"256\")), _ = z(_, \"\" + this._ord(e.charAt(5)));\n              var h = [];\n              do {\n                var p = this._my_bcmod(_, \"900\");\n                _ = m0(_, \"900\"), h.unshift(p);\n              } while (_ != \"0\");\n              c = c.concat(h);\n            } else\n              for (var f = 0; f < b; ++f)\n                c.push(this._ord(e.charAt(f)));\n            e = d;\n          }\n          break;\n        }\n        case 902: {\n          for (var d, r; (r = e.length) > 0; ) {\n            r > 44 ? (d = e.substring(44), e = e.substring(0, 44)) : d = \"\";\n            var _ = \"1\" + e;\n            do {\n              var p = this._my_bcmod(_, \"900\");\n              _ = m0(_, \"900\"), c.unshift(p);\n            } while (_ != \"0\");\n            e = d;\n          }\n          break;\n        }\n        case 913: {\n          c.push(this._ord(e));\n          break;\n        }\n      }\n      return n && c.unshift(x), c;\n    },\n    getErrorCorrectionLevel: function(x, e) {\n      for (var n = 8, c = 928 - e; n > 0; ) {\n        var t = 2 << x;\n        if (c >= t)\n          break;\n        --n;\n      }\n      return (x < 0 || x > 8) && (e < 41 ? x = 2 : e < 161 ? x = 3 : e < 321 ? x = 4 : e < 864 ? x = 5 : x = n), x > n && (x = n), x;\n    },\n    getErrorCorrection: function(x, e) {\n      for (var n = this.rsfactors[e], c = 2 << e, t = c - 1, a = this._array_fill(0, c, 0), r = 0; r < x.length; r++) {\n        for (var f = (x[r] + a[t]) % 929, i = t; i > 0; --i) {\n          var s = f * n[i] % 929, u = 929 - s;\n          a[i] = (a[i - 1] + u) % 929;\n        }\n        s = f * n[0] % 929, u = 929 - s, a[0] = u % 929;\n      }\n      for (var i = 0; i < a.length; i++)\n        a[i] != 0 && (a[i] = 929 - a[i]);\n      return a = a.reverse(), a;\n    },\n    getBarcodeArray: function() {\n      return this.barcode_array;\n    },\n    /**\n     *\n     * Functions from phpjs.org\n     *\n     */\n    _array_fill: function(x, e, n) {\n      var c, t = {};\n      if (x == 0) {\n        for (var a = [], r = 0; r < e; r++)\n          a.push(n);\n        return a;\n      }\n      if (!isNaN(x) && !isNaN(e))\n        for (c = 0; c < e; c++)\n          t[c + x] = n;\n      return t;\n    },\n    _str_repeat: function(x, e) {\n      for (var n = \"\"; e & 1 && (n += x), e >>= 1, e; )\n        x += x;\n      return n;\n    },\n    _intval: function(x, e) {\n      var n, c = typeof x;\n      return c === \"boolean\" ? +x : c === \"string\" ? (n = parseInt(x, e || 10), isNaN(n) || !isFinite(n) ? 0 : n) : c === \"number\" && isFinite(x) ? x | 0 : 0;\n    },\n    _sprintf: function() {\n      var x = /%%|%(\\d+\\$)?([-+\\'#0 ]*)(\\*\\d+\\$|\\*|\\d+)?(\\.(\\*\\d+\\$|\\*|\\d+))?([scboxXuideEfFgG])/g, e = arguments, n = 0, c = e[n++], t = function(s, u, l, d) {\n        l || (l = \" \");\n        var b = s.length >= u ? \"\" : Array(1 + u - s.length >>> 0).join(l);\n        return d ? s + b : b + s;\n      }, a = function(s, u, l, d, b, _) {\n        var h = d - s.length;\n        return h > 0 && (l || !b ? s = t(s, d, _, l) : s = s.slice(0, u.length) + t(\"\", h, \"0\", !0) + s.slice(u.length)), s;\n      }, r = function(s, u, l, d, b, _, h) {\n        var p = s >>> 0;\n        return l = l && p && {\n          2: \"0b\",\n          8: \"0\",\n          16: \"0x\"\n        }[u] || \"\", s = l + t(p.toString(u), _ || 0, \"0\", !1), a(s, l, d, b, h);\n      }, f = function(s, u, l, d, b, _) {\n        return d != null && (s = s.slice(0, d)), a(\n          s,\n          \"\",\n          u,\n          l,\n          b,\n          _\n        );\n      }, i = function(s, u, l, d, b, _, h) {\n        var p, v, w, g, m;\n        if (s == \"%%\")\n          return \"%\";\n        for (var E = !1, y = \"\", S = !1, C = !1, B = \" \", A = l.length, M = 0; l && M < A; M++)\n          switch (l.charAt(M)) {\n            case \" \":\n              y = \" \";\n              break;\n            case \"+\":\n              y = \"+\";\n              break;\n            case \"-\":\n              E = !0;\n              break;\n            case \"'\":\n              B = l.charAt(M + 1);\n              break;\n            case \"0\":\n              S = !0;\n              break;\n            case \"#\":\n              C = !0;\n              break;\n          }\n        if (d ? d == \"*\" ? d = +e[n++] : d.charAt(0) == \"*\" ? d = +e[d.slice(1, -1)] : d = +d : d = 0, d < 0 && (d = -d, E = !0), !isFinite(d))\n          throw new Error(\"sprintf: (minimum-)width must be finite\");\n        switch (_ ? _ == \"*\" ? _ = +e[n++] : _.charAt(0) == \"*\" ? _ = +e[_.slice(1, -1)] : _ = +_ : _ = \"fFeE\".indexOf(h) > -1 ? 6 : h == \"d\" ? 0 : void 0, m = u ? e[u.slice(0, -1)] : e[n++], h) {\n          case \"s\":\n            return f(\n              String(m),\n              E,\n              d,\n              _,\n              S,\n              B\n            );\n          case \"c\":\n            return f(\n              String.fromCharCode(+m),\n              E,\n              d,\n              _,\n              S\n            );\n          case \"b\":\n            return r(\n              m,\n              2,\n              C,\n              E,\n              d,\n              _,\n              S\n            );\n          case \"o\":\n            return r(\n              m,\n              8,\n              C,\n              E,\n              d,\n              _,\n              S\n            );\n          case \"x\":\n            return r(\n              m,\n              16,\n              C,\n              E,\n              d,\n              _,\n              S\n            );\n          case \"X\":\n            return r(\n              m,\n              16,\n              C,\n              E,\n              d,\n              _,\n              S\n            ).toUpperCase();\n          case \"u\":\n            return r(\n              m,\n              10,\n              C,\n              E,\n              d,\n              _,\n              S\n            );\n          case \"i\":\n          case \"d\":\n            return p = +m || 0, p = Math.round(p - p % 1), v = p < 0 ? \"-\" : y, m = v + t(String(Math.abs(p)), _, \"0\", !1), a(m, v, E, d, S);\n          case \"e\":\n          case \"E\":\n          case \"f\":\n          case \"F\":\n          case \"g\":\n          case \"G\":\n            return p = +m, v = p < 0 ? \"-\" : y, w = [\"toExponential\", \"toFixed\", \"toPrecision\"][\"efg\".indexOf(h.toLowerCase())], g = [\"toString\", \"toUpperCase\"][\"eEfFgG\".indexOf(h) % 2], m = v + Math.abs(p)[w](_), a(m, v, E, d, S)[g]();\n          default:\n            return s;\n        }\n      };\n      return c.replace(x, i);\n    },\n    _preg_split: function(x, e, n, c) {\n      n = n || 0, c = c || \"\";\n      var t, a = [], r = 0, f = 0, i = !1, s = !1, u = !1, l = {}, d = 0, b = /^\\/(.*)\\/\\w*$/.exec(x.toString())[1], _ = /^\\/.*\\/(\\w*)$/.exec(x.toString())[1];\n      if (x = x.global && typeof x != \"string\" ? x : new RegExp(\n        b,\n        _ + (_.indexOf(\"g\") !== -1 ? \"\" : \"g\")\n      ), l = {\n        PREG_SPLIT_NO_EMPTY: 1,\n        PREG_SPLIT_DELIM_CAPTURE: 2,\n        PREG_SPLIT_OFFSET_CAPTURE: 4\n      }, typeof c != \"number\") {\n        for (c = [].concat(c), f = 0; f < c.length; f++)\n          l[c[f]] && (d = d | l[c[f]]);\n        c = d;\n      }\n      i = c & l.PREG_SPLIT_NO_EMPTY, s = c & l.PREG_SPLIT_DELIM_CAPTURE, u = c & l.PREG_SPLIT_OFFSET_CAPTURE;\n      var h = function(v, w) {\n        i && !v.length || (u && (v = [v, w]), a.push(v));\n      };\n      if (!b) {\n        for (t = e.split(\"\"), f = 0; f < t.length; f++)\n          h(t[f], f);\n        return a;\n      }\n      for (; (t = x.exec(e)) && n !== 1; ) {\n        if (h(e.slice(r, t.index), r), r = t.index + t[0].length, s) {\n          var p = Array.prototype.slice.call(t);\n          for (f = 1; f < p.length; f++)\n            t[f] !== void 0 && h(t[f], t.index + t[0].indexOf(t[f]));\n        }\n        n--;\n      }\n      return h(e.slice(r, e.length), r), a;\n    },\n    _ord: function(x) {\n      return x.charCodeAt(0);\n    },\n    _array_search: function(x, e, n) {\n      var c = !!n, t = \"\";\n      if (e && typeof e == \"object\" && e.change_key_case)\n        return e.search(x, n);\n      if (typeof x == \"object\" && x.exec) {\n        if (!c) {\n          var a = \"i\" + (x.global ? \"g\" : \"\") + (x.multiline ? \"m\" : \"\") + (x.sticky ? \"y\" : \"\");\n          x = new RegExp(x.source, a);\n        }\n        for (t in e)\n          if (x.test(e[t]))\n            return t;\n        return !1;\n      }\n      for (t in e)\n        if (c && e[t] === x || !c && e[t] == x)\n          return t;\n      return !1;\n    },\n    _my_bcmod: function(x, e) {\n      var n = 5, c = \"\";\n      do {\n        var t = parseInt(c + \"\" + x.substring(0, n));\n        x = x.substring(n), c = t % e;\n      } while (x.length);\n      return parseInt(c);\n    }\n  };\n}\nfunction U1(x, e, n, c, t = \"#000000\", a = \"#FFFFFF\") {\n  const r = x.getContext(\"2d\");\n  let f = 0;\n  for (let i = 0; i < e.num_rows; i += 1) {\n    let s = 0;\n    for (let u = 0; u < e.num_cols; u += 1)\n      e.bcode[i][u] === \"1\" ? r.fillStyle = t : r.fillStyle = a, r.fillRect(s, f, n, c), s += n;\n    f += c;\n  }\n}\nfunction R1(x, e, n) {\n  const c = document.createElement(\"canvas\"), t = L1();\n  t.init(x);\n  const a = t.getBarcodeArray();\n  return c.width = 5 * a.num_cols, c.height = 5 * a.num_rows, U1(c, a, 5, 5, e, n), c.toDataURL();\n}\nconst F1 = (x, e) => {\n  const n = x.__vccOpts || x;\n  for (const [c, t] of e)\n    n[c] = t;\n  return n;\n}, D1 = { class: \"apron-pdf417\" }, z1 = [\"src\"], k1 = /* @__PURE__ */ Object.assign({\n  name: \"ApPdf417\"\n}, {\n  __name: \"index\",\n  props: {\n    text: {\n      type: String,\n      default: \"Apron Design pdf417 code\"\n    },\n    width: {\n      type: Number,\n      default: 300\n    },\n    height: {\n      type: Number,\n      default: 150\n    },\n    color: {\n      type: String,\n      default: \"#393939\"\n    },\n    backgroundColor: {\n      type: String,\n      default: \"#FFFFFF\"\n    },\n    margin: Number\n  },\n  setup(x) {\n    const e = x, n = R1(e.text, e.color, e.backgroundColor);\n    return (c, t) => (v0(), w0(\"div\", D1, [\n      E0(\"img\", {\n        src: H0(n),\n        style: O0({\n          width: `${x.width}px`,\n          height: `${x.height}px`,\n          padding: `${x.margin}px`\n        })\n      }, null, 12, z1)\n    ]));\n  }\n}), k0 = /* @__PURE__ */ F1(k1, [[\"__scopeId\", \"data-v-b52caae3\"]]), H1 = [\n  z0,\n  k0\n], l0 = function(x) {\n  if (l0.installed)\n    return !1;\n  H1.map((e) => x.component(e.name, e));\n};\ntypeof window < \"u\" && window.Vue && l0(window.Vue);\nconst V1 = {\n  install: l0,\n  Qrcode: z0,\n  Pdf417: k0\n};\nexport {\n  V1 as default\n};\n"],
  "mappings": "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,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA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",
  "names": []
}
